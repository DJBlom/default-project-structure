
/home/odin/workspace/software/NativeProjectStructure/build/NativeProjectStructure/NativeProjectStructure.elf:     file format elf64-x86-64

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000400318  0000000000400318  00000318  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.property 00000040  0000000000400338  0000000000400338  00000338  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000400378  0000000000400378  00000378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .note.ABI-tag 00000020  000000000040039c  000000000040039c  0000039c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .gnu.hash     00000038  00000000004003c0  00000000004003c0  000003c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynsym       00000408  00000000004003f8  00000000004003f8  000003f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .dynstr       000003b9  0000000000400800  0000000000400800  00000800  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version  00000056  0000000000400bba  0000000000400bba  00000bba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .gnu.version_r 000000b0  0000000000400c10  0000000000400c10  00000c10  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.dyn     00000078  0000000000400cc0  0000000000400cc0  00000cc0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .rela.plt     00000360  0000000000400d38  0000000000400d38  00000d38  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .init         0000001b  0000000000402000  0000000000402000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt          00000250  0000000000402020  0000000000402020  00002020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00001157  0000000000402270  0000000000402270  00002270  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         0000000d  00000000004033c8  00000000004033c8  000033c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       000003f7  0000000000404000  0000000000404000  00004000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000016c  00000000004043f8  00000000004043f8  000043f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     000005a0  0000000000404568  0000000000404568  00004568  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .gcc_except_table 0000009f  0000000000404b08  0000000000404b08  00004b08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 .init_array   00000020  0000000000405cb8  0000000000405cb8  00004cb8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .fini_array   00000008  0000000000405cd8  0000000000405cd8  00004cd8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .data.rel.ro  000000f8  0000000000405ce0  0000000000405ce0  00004ce0  2**4
                  CONTENTS, ALLOC, LOAD, DATA
 22 .dynamic      00000200  0000000000405dd8  0000000000405dd8  00004dd8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got          00000010  0000000000405fd8  0000000000405fd8  00004fd8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .got.plt      00000138  0000000000405fe8  0000000000405fe8  00004fe8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 25 .data         00000004  0000000000406120  0000000000406120  00005120  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 26 .bss          00000180  0000000000406140  0000000000406140  00005124  2**5
                  ALLOC
 27 .comment      0000005c  0000000000000000  0000000000000000  00005124  2**0
                  CONTENTS, READONLY
 28 .annobin.notes 0000014f  0000000000000000  0000000000000000  00005180  2**0
                  CONTENTS, READONLY
 29 .gnu.build.attributes 00000144  00000000004082c0  00000000004082c0  000052d0  2**2
                  CONTENTS, READONLY, OCTETS
 30 .debug_aranges 000001a0  0000000000000000  0000000000000000  00005414  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 31 .debug_info   0001566d  0000000000000000  0000000000000000  000055b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_abbrev 000032d0  0000000000000000  0000000000000000  0001ac21  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 33 .debug_line   00002672  0000000000000000  0000000000000000  0001def1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 34 .debug_str    000275cf  0000000000000000  0000000000000000  00020563  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 35 .debug_line_str 0000144b  0000000000000000  0000000000000000  00047b32  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 36 .debug_loclists 00000763  0000000000000000  0000000000000000  00048f7d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 37 .debug_macro  00022a6e  0000000000000000  0000000000000000  000496e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 38 .debug_rnglists 000000d1  0000000000000000  0000000000000000  0006c14e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .init:

0000000000402000 <_init>:
  402000:	f3 0f 1e fa          	endbr64
  402004:	48 83 ec 08          	sub    $0x8,%rsp
  402008:	48 8b 05 d1 3f 00 00 	mov    0x3fd1(%rip),%rax        # 405fe0 <__gmon_start__@Base>
  40200f:	48 85 c0             	test   %rax,%rax
  402012:	74 02                	je     402016 <_init+0x16>
  402014:	ff d0                	call   *%rax
  402016:	48 83 c4 08          	add    $0x8,%rsp
  40201a:	c3                   	ret

Disassembly of section .plt:

0000000000402020 <__errno_location@plt-0x10>:
  402020:	ff 35 ca 3f 00 00    	push   0x3fca(%rip)        # 405ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
  402026:	ff 25 cc 3f 00 00    	jmp    *0x3fcc(%rip)        # 405ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
  40202c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000402030 <__errno_location@plt>:
  402030:	ff 25 ca 3f 00 00    	jmp    *0x3fca(%rip)        # 406000 <__errno_location@GLIBC_2.2.5>
  402036:	68 00 00 00 00       	push   $0x0
  40203b:	e9 e0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402040 <pthread_mutexattr_init@plt>:
  402040:	ff 25 c2 3f 00 00    	jmp    *0x3fc2(%rip)        # 406008 <pthread_mutexattr_init@GLIBC_2.34>
  402046:	68 01 00 00 00       	push   $0x1
  40204b:	e9 d0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402050 <syslog@plt>:
  402050:	ff 25 ba 3f 00 00    	jmp    *0x3fba(%rip)        # 406010 <syslog@GLIBC_2.2.5>
  402056:	68 02 00 00 00       	push   $0x2
  40205b:	e9 c0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402060 <nanosleep@plt>:
  402060:	ff 25 b2 3f 00 00    	jmp    *0x3fb2(%rip)        # 406018 <nanosleep@GLIBC_2.2.5>
  402066:	68 03 00 00 00       	push   $0x3
  40206b:	e9 b0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402070 <__cxa_begin_catch@plt>:
  402070:	ff 25 aa 3f 00 00    	jmp    *0x3faa(%rip)        # 406020 <__cxa_begin_catch@CXXABI_1.3>
  402076:	68 04 00 00 00       	push   $0x4
  40207b:	e9 a0 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402080 <__cxa_allocate_exception@plt>:
  402080:	ff 25 a2 3f 00 00    	jmp    *0x3fa2(%rip)        # 406028 <__cxa_allocate_exception@CXXABI_1.3>
  402086:	68 05 00 00 00       	push   $0x5
  40208b:	e9 90 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402090 <pthread_attr_setschedparam@plt>:
  402090:	ff 25 9a 3f 00 00    	jmp    *0x3f9a(%rip)        # 406030 <pthread_attr_setschedparam@GLIBC_2.2.5>
  402096:	68 06 00 00 00       	push   $0x6
  40209b:	e9 80 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020a0 <pthread_attr_setaffinity_np@plt>:
  4020a0:	ff 25 92 3f 00 00    	jmp    *0x3f92(%rip)        # 406038 <pthread_attr_setaffinity_np@GLIBC_2.32>
  4020a6:	68 07 00 00 00       	push   $0x7
  4020ab:	e9 70 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020b0 <sem_wait@plt>:
  4020b0:	ff 25 8a 3f 00 00    	jmp    *0x3f8a(%rip)        # 406040 <sem_wait@GLIBC_2.34>
  4020b6:	68 08 00 00 00       	push   $0x8
  4020bb:	e9 60 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020c0 <pthread_mutex_unlock@plt>:
  4020c0:	ff 25 82 3f 00 00    	jmp    *0x3f82(%rip)        # 406048 <pthread_mutex_unlock@GLIBC_2.2.5>
  4020c6:	68 09 00 00 00       	push   $0x9
  4020cb:	e9 50 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020d0 <sem_init@plt>:
  4020d0:	ff 25 7a 3f 00 00    	jmp    *0x3f7a(%rip)        # 406050 <sem_init@GLIBC_2.34>
  4020d6:	68 0a 00 00 00       	push   $0xa
  4020db:	e9 40 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020e0 <__cxa_atexit@plt>:
  4020e0:	ff 25 72 3f 00 00    	jmp    *0x3f72(%rip)        # 406058 <__cxa_atexit@GLIBC_2.2.5>
  4020e6:	68 0b 00 00 00       	push   $0xb
  4020eb:	e9 30 ff ff ff       	jmp    402020 <_init+0x20>

00000000004020f0 <pthread_join@plt>:
  4020f0:	ff 25 6a 3f 00 00    	jmp    *0x3f6a(%rip)        # 406060 <pthread_join@GLIBC_2.34>
  4020f6:	68 0c 00 00 00       	push   $0xc
  4020fb:	e9 20 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402100 <sched_get_priority_max@plt>:
  402100:	ff 25 62 3f 00 00    	jmp    *0x3f62(%rip)        # 406068 <sched_get_priority_max@GLIBC_2.2.5>
  402106:	68 0d 00 00 00       	push   $0xd
  40210b:	e9 10 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402110 <_ZdlPvm@plt>:
  402110:	ff 25 5a 3f 00 00    	jmp    *0x3f5a(%rip)        # 406070 <_ZdlPvm@CXXABI_1.3.9>
  402116:	68 0e 00 00 00       	push   $0xe
  40211b:	e9 00 ff ff ff       	jmp    402020 <_init+0x20>

0000000000402120 <pthread_mutex_destroy@plt>:
  402120:	ff 25 52 3f 00 00    	jmp    *0x3f52(%rip)        # 406078 <pthread_mutex_destroy@GLIBC_2.2.5>
  402126:	68 0f 00 00 00       	push   $0xf
  40212b:	e9 f0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402130 <pthread_attr_setinheritsched@plt>:
  402130:	ff 25 4a 3f 00 00    	jmp    *0x3f4a(%rip)        # 406080 <pthread_attr_setinheritsched@GLIBC_2.2.5>
  402136:	68 10 00 00 00       	push   $0x10
  40213b:	e9 e0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402140 <pthread_attr_init@plt>:
  402140:	ff 25 42 3f 00 00    	jmp    *0x3f42(%rip)        # 406088 <pthread_attr_init@GLIBC_2.2.5>
  402146:	68 11 00 00 00       	push   $0x11
  40214b:	e9 d0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402150 <sched_getcpu@plt>:
  402150:	ff 25 3a 3f 00 00    	jmp    *0x3f3a(%rip)        # 406090 <sched_getcpu@GLIBC_2.6>
  402156:	68 12 00 00 00       	push   $0x12
  40215b:	e9 c0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402160 <pthread_attr_setschedpolicy@plt>:
  402160:	ff 25 32 3f 00 00    	jmp    *0x3f32(%rip)        # 406098 <pthread_attr_setschedpolicy@GLIBC_2.2.5>
  402166:	68 13 00 00 00       	push   $0x13
  40216b:	e9 b0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402170 <getpid@plt>:
  402170:	ff 25 2a 3f 00 00    	jmp    *0x3f2a(%rip)        # 4060a0 <getpid@GLIBC_2.2.5>
  402176:	68 14 00 00 00       	push   $0x14
  40217b:	e9 a0 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402180 <pthread_mutex_lock@plt>:
  402180:	ff 25 22 3f 00 00    	jmp    *0x3f22(%rip)        # 4060a8 <pthread_mutex_lock@GLIBC_2.2.5>
  402186:	68 15 00 00 00       	push   $0x15
  40218b:	e9 90 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402190 <pthread_mutexattr_destroy@plt>:
  402190:	ff 25 1a 3f 00 00    	jmp    *0x3f1a(%rip)        # 4060b0 <pthread_mutexattr_destroy@GLIBC_2.34>
  402196:	68 16 00 00 00       	push   $0x16
  40219b:	e9 80 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021a0 <pthread_mutex_init@plt>:
  4021a0:	ff 25 12 3f 00 00    	jmp    *0x3f12(%rip)        # 4060b8 <pthread_mutex_init@GLIBC_2.2.5>
  4021a6:	68 17 00 00 00       	push   $0x17
  4021ab:	e9 70 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021b0 <sched_setscheduler@plt>:
  4021b0:	ff 25 0a 3f 00 00    	jmp    *0x3f0a(%rip)        # 4060c0 <sched_setscheduler@GLIBC_2.2.5>
  4021b6:	68 18 00 00 00       	push   $0x18
  4021bb:	e9 60 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021c0 <__cxa_end_catch@plt>:
  4021c0:	ff 25 02 3f 00 00    	jmp    *0x3f02(%rip)        # 4060c8 <__cxa_end_catch@CXXABI_1.3>
  4021c6:	68 19 00 00 00       	push   $0x19
  4021cb:	e9 50 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021d0 <__gxx_personality_v0@plt>:
  4021d0:	ff 25 fa 3e 00 00    	jmp    *0x3efa(%rip)        # 4060d0 <__gxx_personality_v0@CXXABI_1.3>
  4021d6:	68 1a 00 00 00       	push   $0x1a
  4021db:	e9 40 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021e0 <pthread_attr_destroy@plt>:
  4021e0:	ff 25 f2 3e 00 00    	jmp    *0x3ef2(%rip)        # 4060d8 <pthread_attr_destroy@GLIBC_2.2.5>
  4021e6:	68 1b 00 00 00       	push   $0x1b
  4021eb:	e9 30 fe ff ff       	jmp    402020 <_init+0x20>

00000000004021f0 <sem_post@plt>:
  4021f0:	ff 25 ea 3e 00 00    	jmp    *0x3eea(%rip)        # 4060e0 <sem_post@GLIBC_2.34>
  4021f6:	68 1c 00 00 00       	push   $0x1c
  4021fb:	e9 20 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402200 <__cxa_throw@plt>:
  402200:	ff 25 e2 3e 00 00    	jmp    *0x3ee2(%rip)        # 4060e8 <__cxa_throw@CXXABI_1.3>
  402206:	68 1d 00 00 00       	push   $0x1d
  40220b:	e9 10 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402210 <_Unwind_Resume@plt>:
  402210:	ff 25 da 3e 00 00    	jmp    *0x3eda(%rip)        # 4060f0 <_Unwind_Resume@GCC_3.0>
  402216:	68 1e 00 00 00       	push   $0x1e
  40221b:	e9 00 fe ff ff       	jmp    402020 <_init+0x20>

0000000000402220 <pthread_exit@plt>:
  402220:	ff 25 d2 3e 00 00    	jmp    *0x3ed2(%rip)        # 4060f8 <pthread_exit@GLIBC_2.2.5>
  402226:	68 1f 00 00 00       	push   $0x1f
  40222b:	e9 f0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402230 <pthread_create@plt>:
  402230:	ff 25 ca 3e 00 00    	jmp    *0x3eca(%rip)        # 406100 <pthread_create@GLIBC_2.34>
  402236:	68 20 00 00 00       	push   $0x20
  40223b:	e9 e0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402240 <pthread_mutexattr_setprotocol@plt>:
  402240:	ff 25 c2 3e 00 00    	jmp    *0x3ec2(%rip)        # 406108 <pthread_mutexattr_setprotocol@GLIBC_2.34>
  402246:	68 21 00 00 00       	push   $0x21
  40224b:	e9 d0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402250 <sem_destroy@plt>:
  402250:	ff 25 ba 3e 00 00    	jmp    *0x3eba(%rip)        # 406110 <sem_destroy@GLIBC_2.34>
  402256:	68 22 00 00 00       	push   $0x22
  40225b:	e9 c0 fd ff ff       	jmp    402020 <_init+0x20>

0000000000402260 <__cxa_pure_virtual@plt>:
  402260:	ff 25 b2 3e 00 00    	jmp    *0x3eb2(%rip)        # 406118 <__cxa_pure_virtual@CXXABI_1.3>
  402266:	68 23 00 00 00       	push   $0x23
  40226b:	e9 b0 fd ff ff       	jmp    402020 <_init+0x20>

Disassembly of section .text:

0000000000402270 <_start>:
  402270:	f3 0f 1e fa          	endbr64
  402274:	31 ed                	xor    %ebp,%ebp
  402276:	49 89 d1             	mov    %rdx,%r9
  402279:	5e                   	pop    %rsi
  40227a:	48 89 e2             	mov    %rsp,%rdx
  40227d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  402281:	50                   	push   %rax
  402282:	54                   	push   %rsp
  402283:	45 31 c0             	xor    %r8d,%r8d
  402286:	31 c9                	xor    %ecx,%ecx
  402288:	48 c7 c7 6e 24 40 00 	mov    $0x40246e,%rdi
  40228f:	ff 15 43 3d 00 00    	call   *0x3d43(%rip)        # 405fd8 <__libc_start_main@GLIBC_2.34>
  402295:	f4                   	hlt
  402296:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40229d:	00 00 00 

00000000004022a0 <_dl_relocate_static_pie>:
  4022a0:	f3 0f 1e fa          	endbr64
  4022a4:	c3                   	ret
  4022a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  4022ac:	00 00 00 
  4022af:	90                   	nop

00000000004022b0 <deregister_tm_clones>:
  4022b0:	b8 28 61 40 00       	mov    $0x406128,%eax
  4022b5:	48 3d 28 61 40 00    	cmp    $0x406128,%rax
  4022bb:	74 13                	je     4022d0 <deregister_tm_clones+0x20>
  4022bd:	b8 00 00 00 00       	mov    $0x0,%eax
  4022c2:	48 85 c0             	test   %rax,%rax
  4022c5:	74 09                	je     4022d0 <deregister_tm_clones+0x20>
  4022c7:	bf 28 61 40 00       	mov    $0x406128,%edi
  4022cc:	ff e0                	jmp    *%rax
  4022ce:	66 90                	xchg   %ax,%ax
  4022d0:	c3                   	ret
  4022d1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  4022d8:	00 00 00 00 
  4022dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004022e0 <register_tm_clones>:
  4022e0:	be 28 61 40 00       	mov    $0x406128,%esi
  4022e5:	48 81 ee 28 61 40 00 	sub    $0x406128,%rsi
  4022ec:	48 89 f0             	mov    %rsi,%rax
  4022ef:	48 c1 ee 3f          	shr    $0x3f,%rsi
  4022f3:	48 c1 f8 03          	sar    $0x3,%rax
  4022f7:	48 01 c6             	add    %rax,%rsi
  4022fa:	48 d1 fe             	sar    $1,%rsi
  4022fd:	74 11                	je     402310 <register_tm_clones+0x30>
  4022ff:	b8 00 00 00 00       	mov    $0x0,%eax
  402304:	48 85 c0             	test   %rax,%rax
  402307:	74 07                	je     402310 <register_tm_clones+0x30>
  402309:	bf 28 61 40 00       	mov    $0x406128,%edi
  40230e:	ff e0                	jmp    *%rax
  402310:	c3                   	ret
  402311:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  402318:	00 00 00 00 
  40231c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000402320 <__do_global_dtors_aux>:
  402320:	f3 0f 1e fa          	endbr64
  402324:	80 3d 15 3e 00 00 00 	cmpb   $0x0,0x3e15(%rip)        # 406140 <completed.0>
  40232b:	75 13                	jne    402340 <__do_global_dtors_aux+0x20>
  40232d:	55                   	push   %rbp
  40232e:	48 89 e5             	mov    %rsp,%rbp
  402331:	e8 7a ff ff ff       	call   4022b0 <deregister_tm_clones>
  402336:	c6 05 03 3e 00 00 01 	movb   $0x1,0x3e03(%rip)        # 406140 <completed.0>
  40233d:	5d                   	pop    %rbp
  40233e:	c3                   	ret
  40233f:	90                   	nop
  402340:	c3                   	ret
  402341:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  402348:	00 00 00 00 
  40234c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000402350 <frame_dummy>:
  402350:	f3 0f 1e fa          	endbr64
  402354:	eb 8a                	jmp    4022e0 <register_tm_clones>

0000000000402356 <_Z41__static_initialization_and_destruction_0v>:
	{
		syslog(LOG_CRIT, "Unable To Start The System %d", static_cast<int> (e));
	}

	return 0;
}
  402356:	48 83 ec 08          	sub    $0x8,%rsp
		private:
			inline static bool abortSystem{false};
			inline static bool abortInput{false};
			inline static bool abortProcessData{false};
			inline static bool abortOutput{false};
			inline static Api::PrioInheritMutex criticalSection;
  40235a:	80 3d 07 3e 00 00 00 	cmpb   $0x0,0x3e07(%rip)        # 406168 <_ZGVN6System8Services15criticalSectionE>
  402361:	74 31                	je     402394 <_Z41__static_initialization_and_destruction_0v+0x3e>
			inline static Api::BinarySemaphore inputSem;
  402363:	80 3d f6 3d 00 00 00 	cmpb   $0x0,0x3df6(%rip)        # 406160 <_ZGVN6System8Services8inputSemE>
  40236a:	74 4f                	je     4023bb <_Z41__static_initialization_and_destruction_0v+0x65>
			inline static Api::BinarySemaphore processDataSem;
  40236c:	80 3d e5 3d 00 00 00 	cmpb   $0x0,0x3de5(%rip)        # 406158 <_ZGVN6System8Services14processDataSemE>
  402373:	74 6d                	je     4023e2 <_Z41__static_initialization_and_destruction_0v+0x8c>
			inline static Api::BinarySemaphore outputSem;
  402375:	80 3d d4 3d 00 00 00 	cmpb   $0x0,0x3dd4(%rip)        # 406150 <_ZGVN6System8Services9outputSemE>
  40237c:	0f 84 8a 00 00 00    	je     40240c <_Z41__static_initialization_and_destruction_0v+0xb6>
			inline static Api::BinarySemaphore sequencerSem;
  402382:	80 3d bf 3d 00 00 00 	cmpb   $0x0,0x3dbf(%rip)        # 406148 <_ZGVN6System8Services12sequencerSemE>
  402389:	0f 84 a7 00 00 00    	je     402436 <_Z41__static_initialization_and_destruction_0v+0xe0>
  40238f:	48 83 c4 08          	add    $0x8,%rsp
  402393:	c3                   	ret
			inline static Api::PrioInheritMutex criticalSection;
  402394:	c6 05 cd 3d 00 00 01 	movb   $0x1,0x3dcd(%rip)        # 406168 <_ZGVN6System8Services15criticalSectionE>
  40239b:	bf 80 62 40 00       	mov    $0x406280,%edi
  4023a0:	e8 19 03 00 00       	call   4026be <_ZN3Api16PrioInheritMutexC1Ev>
  4023a5:	ba 08 40 40 00       	mov    $0x404008,%edx
  4023aa:	be 80 62 40 00       	mov    $0x406280,%esi
  4023af:	bf 50 26 40 00       	mov    $0x402650,%edi
  4023b4:	e8 27 fd ff ff       	call   4020e0 <__cxa_atexit@plt>
  4023b9:	eb a8                	jmp    402363 <_Z41__static_initialization_and_destruction_0v+0xd>
			inline static Api::BinarySemaphore inputSem;
  4023bb:	c6 05 9e 3d 00 00 01 	movb   $0x1,0x3d9e(%rip)        # 406160 <_ZGVN6System8Services8inputSemE>
  4023c2:	bf 40 62 40 00       	mov    $0x406240,%edi
  4023c7:	e8 1c 02 00 00       	call   4025e8 <_ZN3Api15BinarySemaphoreC1Ev>
			inline static Api::PrioInheritMutex criticalSection;
  4023cc:	ba 08 40 40 00       	mov    $0x404008,%edx
  4023d1:	be 40 62 40 00       	mov    $0x406240,%esi
  4023d6:	bf 82 25 40 00       	mov    $0x402582,%edi
  4023db:	e8 00 fd ff ff       	call   4020e0 <__cxa_atexit@plt>
  4023e0:	eb 8a                	jmp    40236c <_Z41__static_initialization_and_destruction_0v+0x16>
			inline static Api::BinarySemaphore processDataSem;
  4023e2:	c6 05 6f 3d 00 00 01 	movb   $0x1,0x3d6f(%rip)        # 406158 <_ZGVN6System8Services14processDataSemE>
  4023e9:	bf 00 62 40 00       	mov    $0x406200,%edi
  4023ee:	e8 f5 01 00 00       	call   4025e8 <_ZN3Api15BinarySemaphoreC1Ev>
			inline static Api::PrioInheritMutex criticalSection;
  4023f3:	ba 08 40 40 00       	mov    $0x404008,%edx
  4023f8:	be 00 62 40 00       	mov    $0x406200,%esi
  4023fd:	bf 82 25 40 00       	mov    $0x402582,%edi
  402402:	e8 d9 fc ff ff       	call   4020e0 <__cxa_atexit@plt>
  402407:	e9 69 ff ff ff       	jmp    402375 <_Z41__static_initialization_and_destruction_0v+0x1f>
			inline static Api::BinarySemaphore outputSem;
  40240c:	c6 05 3d 3d 00 00 01 	movb   $0x1,0x3d3d(%rip)        # 406150 <_ZGVN6System8Services9outputSemE>
  402413:	bf c0 61 40 00       	mov    $0x4061c0,%edi
  402418:	e8 cb 01 00 00       	call   4025e8 <_ZN3Api15BinarySemaphoreC1Ev>
			inline static Api::PrioInheritMutex criticalSection;
  40241d:	ba 08 40 40 00       	mov    $0x404008,%edx
  402422:	be c0 61 40 00       	mov    $0x4061c0,%esi
  402427:	bf 82 25 40 00       	mov    $0x402582,%edi
  40242c:	e8 af fc ff ff       	call   4020e0 <__cxa_atexit@plt>
  402431:	e9 4c ff ff ff       	jmp    402382 <_Z41__static_initialization_and_destruction_0v+0x2c>
			inline static Api::BinarySemaphore sequencerSem;
  402436:	c6 05 0b 3d 00 00 01 	movb   $0x1,0x3d0b(%rip)        # 406148 <_ZGVN6System8Services12sequencerSemE>
  40243d:	bf 80 61 40 00       	mov    $0x406180,%edi
  402442:	e8 a1 01 00 00       	call   4025e8 <_ZN3Api15BinarySemaphoreC1Ev>
			inline static Api::PrioInheritMutex criticalSection;
  402447:	ba 08 40 40 00       	mov    $0x404008,%edx
  40244c:	be 80 61 40 00       	mov    $0x406180,%esi
  402451:	bf 82 25 40 00       	mov    $0x402582,%edi
  402456:	e8 85 fc ff ff       	call   4020e0 <__cxa_atexit@plt>
  40245b:	e9 2f ff ff ff       	jmp    40238f <_Z41__static_initialization_and_destruction_0v+0x39>

0000000000402460 <_GLOBAL__sub_I_main>:
  402460:	48 83 ec 08          	sub    $0x8,%rsp
  402464:	e8 ed fe ff ff       	call   402356 <_Z41__static_initialization_and_destruction_0v>
  402469:	48 83 c4 08          	add    $0x8,%rsp
  40246d:	c3                   	ret

000000000040246e <main>:
{
  40246e:	41 56                	push   %r14
  402470:	53                   	push   %rbx
  402471:	48 81 ec 88 03 00 00 	sub    $0x388,%rsp
		pid_t pid = getpid();
  402478:	e8 f3 fc ff ff       	call   402170 <getpid@plt>
  40247d:	89 44 24 0c          	mov    %eax,0xc(%rsp)
		System::Control control{pid};
  402481:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  402486:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  40248b:	e8 b0 08 00 00       	call   402d40 <_ZN6System7ControlC1ERKi>
		if (control.Start() == true)
  402490:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  402495:	e8 d0 09 00 00       	call   402e6a <_ZN6System7Control5StartEv>
  40249a:	84 c0                	test   %al,%al
  40249c:	74 16                	je     4024b4 <main+0x46>
			syslog(LOG_CRIT, "System Started\n");
  40249e:	be 10 40 40 00       	mov    $0x404010,%esi
  4024a3:	bf 02 00 00 00       	mov    $0x2,%edi
  4024a8:	b8 00 00 00 00       	mov    $0x0,%eax
  4024ad:	e8 9e fb ff ff       	call   402050 <syslog@plt>
  4024b2:	eb 0e                	jmp    4024c2 <main+0x54>
            if (control.Shutdown() == true)
  4024b4:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  4024b9:	e8 5c 08 00 00       	call   402d1a <_ZN6System7Control8ShutdownEv>
  4024be:	84 c0                	test   %al,%al
  4024c0:	75 1a                	jne    4024dc <main+0x6e>
	}
  4024c2:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  4024c7:	e8 82 00 00 00       	call   40254e <_ZN6System7ControlD1Ev>
}
  4024cc:	b8 00 00 00 00       	mov    $0x0,%eax
  4024d1:	48 81 c4 88 03 00 00 	add    $0x388,%rsp
  4024d8:	5b                   	pop    %rbx
  4024d9:	41 5e                	pop    %r14
  4024db:	c3                   	ret
                syslog(LOG_CRIT, "System Shutting Down\n");
  4024dc:	be 20 40 40 00       	mov    $0x404020,%esi
  4024e1:	bf 02 00 00 00       	mov    $0x2,%edi
  4024e6:	b8 00 00 00 00       	mov    $0x0,%eax
  4024eb:	e8 60 fb ff ff       	call   402050 <syslog@plt>
  4024f0:	eb d0                	jmp    4024c2 <main+0x54>
	}
  4024f2:	49 89 c6             	mov    %rax,%r14
  4024f5:	48 89 d3             	mov    %rdx,%rbx
  4024f8:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  4024fd:	e8 4c 00 00 00       	call   40254e <_ZN6System7ControlD1Ev>
  402502:	4c 89 f7             	mov    %r14,%rdi
  402505:	48 89 d8             	mov    %rbx,%rax
	catch (System::Errors& e)
  402508:	48 83 f8 01          	cmp    $0x1,%rax
  40250c:	74 0d                	je     40251b <main+0xad>
  40250e:	e8 fd fc ff ff       	call   402210 <_Unwind_Resume@plt>
  402513:	48 89 c7             	mov    %rax,%rdi
  402516:	48 89 d0             	mov    %rdx,%rax
  402519:	eb ed                	jmp    402508 <main+0x9a>
  40251b:	e8 50 fb ff ff       	call   402070 <__cxa_begin_catch@plt>
		syslog(LOG_CRIT, "Unable To Start The System %d", static_cast<int> (e));
  402520:	8b 10                	mov    (%rax),%edx
  402522:	be 36 40 40 00       	mov    $0x404036,%esi
  402527:	bf 02 00 00 00       	mov    $0x2,%edi
  40252c:	b8 00 00 00 00       	mov    $0x0,%eax
  402531:	e8 1a fb ff ff       	call   402050 <syslog@plt>
	}
  402536:	e8 85 fc ff ff       	call   4021c0 <__cxa_end_catch@plt>
	return 0;
  40253b:	eb 8f                	jmp    4024cc <main+0x5e>
	}
  40253d:	48 89 c3             	mov    %rax,%rbx
  402540:	e8 7b fc ff ff       	call   4021c0 <__cxa_end_catch@plt>
  402545:	48 89 df             	mov    %rbx,%rdi
  402548:	e8 c3 fc ff ff       	call   402210 <_Unwind_Resume@plt>
  40254d:	90                   	nop

000000000040254e <_ZN6System7ControlD1Ev>:
			explicit Control(const pid_t& pid);
			Control(const Control&) = delete;
			Control(Control&&) = delete;
			Control& operator= (const Control&) = delete;
			Control& operator= (Control&&) = delete;
			~Control() = default;
  40254e:	53                   	push   %rbx
  40254f:	48 89 fb             	mov    %rdi,%rbx
  402552:	48 8d bf 98 02 00 00 	lea    0x298(%rdi),%rdi
  402559:	e8 24 02 00 00       	call   402782 <_ZN3Api14RealtimeThreadD1Ev>
  40255e:	48 8d bb c0 01 00 00 	lea    0x1c0(%rbx),%rdi
  402565:	e8 18 02 00 00       	call   402782 <_ZN3Api14RealtimeThreadD1Ev>
  40256a:	48 8d bb e8 00 00 00 	lea    0xe8(%rbx),%rdi
  402571:	e8 0c 02 00 00       	call   402782 <_ZN3Api14RealtimeThreadD1Ev>
  402576:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
  40257a:	e8 03 02 00 00       	call   402782 <_ZN3Api14RealtimeThreadD1Ev>
  40257f:	5b                   	pop    %rbx
  402580:	c3                   	ret
  402581:	90                   	nop

0000000000402582 <_ZN3Api15BinarySemaphoreD1Ev>:
	if (sem_init(&this->semaphore, init::p_shared, init::value) != status::ok)
		throw System::Errors::construction; //GCOV_EXCL_LINE
}


Api::BinarySemaphore::~BinarySemaphore()
  402582:	53                   	push   %rbx
  402583:	48 89 fb             	mov    %rdi,%rbx
  402586:	48 c7 07 30 41 40 00 	movq   $0x404130,(%rdi)
{
	sem_destroy(&this->semaphore); //GCOV_EXCL_LINE
  40258d:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
  402591:	e8 ba fc ff ff       	call   402250 <sem_destroy@plt>
#ifndef _SEMAPHORE_H_
#define _SEMAPHORE_H_
namespace Interface {
	class Semaphore {
		public:
			virtual ~Semaphore() = default;
  402596:	48 c7 03 00 41 40 00 	movq   $0x404100,(%rbx)
}
  40259d:	5b                   	pop    %rbx
  40259e:	c3                   	ret
  40259f:	90                   	nop

00000000004025a0 <_ZN3Api15BinarySemaphoreD0Ev>:
Api::BinarySemaphore::~BinarySemaphore()
  4025a0:	53                   	push   %rbx
  4025a1:	48 89 fb             	mov    %rdi,%rbx
}
  4025a4:	e8 d9 ff ff ff       	call   402582 <_ZN3Api15BinarySemaphoreD1Ev>
  4025a9:	be 28 00 00 00       	mov    $0x28,%esi
  4025ae:	48 89 df             	mov    %rbx,%rdi
  4025b1:	e8 5a fb ff ff       	call   402110 <_ZdlPvm@plt>
  4025b6:	5b                   	pop    %rbx
  4025b7:	c3                   	ret

00000000004025b8 <_ZN3Api15BinarySemaphore7AcquireEv>:


[[nodiscard]] bool Api::BinarySemaphore::Acquire() noexcept
{
  4025b8:	48 83 ec 08          	sub    $0x8,%rsp
	bool isAcquired{false};
	isAcquired = !static_cast<bool> (sem_wait(&this->semaphore));
  4025bc:	48 83 c7 08          	add    $0x8,%rdi
  4025c0:	e8 eb fa ff ff       	call   4020b0 <sem_wait@plt>
  4025c5:	85 c0                	test   %eax,%eax
  4025c7:	0f 94 c0             	sete   %al

	return isAcquired;
}
  4025ca:	48 83 c4 08          	add    $0x8,%rsp
  4025ce:	c3                   	ret
  4025cf:	90                   	nop

00000000004025d0 <_ZN3Api15BinarySemaphore7ReleaseEv>:


[[nodiscard]] bool Api::BinarySemaphore::Release() noexcept
{
  4025d0:	48 83 ec 08          	sub    $0x8,%rsp
	bool isReleased{false};
	isReleased = !static_cast<bool> (sem_post(&this->semaphore));
  4025d4:	48 83 c7 08          	add    $0x8,%rdi
  4025d8:	e8 13 fc ff ff       	call   4021f0 <sem_post@plt>
  4025dd:	85 c0                	test   %eax,%eax
  4025df:	0f 94 c0             	sete   %al

	return isReleased;
}
  4025e2:	48 83 c4 08          	add    $0x8,%rsp
  4025e6:	c3                   	ret
  4025e7:	90                   	nop

00000000004025e8 <_ZN3Api15BinarySemaphoreC1Ev>:
Api::BinarySemaphore::BinarySemaphore()
  4025e8:	53                   	push   %rbx
  4025e9:	48 89 fb             	mov    %rdi,%rbx
	class Semaphore {
  4025ec:	48 c7 07 00 41 40 00 	movq   $0x404100,(%rdi)
  4025f3:	48 c7 07 30 41 40 00 	movq   $0x404130,(%rdi)
  4025fa:	66 0f ef c0          	pxor   %xmm0,%xmm0
  4025fe:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
  402602:	0f 11 47 18          	movups %xmm0,0x18(%rdi)
	if (sem_init(&this->semaphore, init::p_shared, init::value) != status::ok)
  402606:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
  40260a:	ba 01 00 00 00       	mov    $0x1,%edx
  40260f:	be 00 00 00 00       	mov    $0x0,%esi
  402614:	e8 b7 fa ff ff       	call   4020d0 <sem_init@plt>
  402619:	85 c0                	test   %eax,%eax
  40261b:	75 02                	jne    40261f <_ZN3Api15BinarySemaphoreC1Ev+0x37>
}
  40261d:	5b                   	pop    %rbx
  40261e:	c3                   	ret
		throw System::Errors::construction; //GCOV_EXCL_LINE
  40261f:	bf 04 00 00 00       	mov    $0x4,%edi
  402624:	e8 57 fa ff ff       	call   402080 <__cxa_allocate_exception@plt>
  402629:	48 89 c7             	mov    %rax,%rdi
  40262c:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  402632:	ba 00 00 00 00       	mov    $0x0,%edx
  402637:	be 78 40 40 00       	mov    $0x404078,%esi
  40263c:	e8 bf fb ff ff       	call   402200 <__cxa_throw@plt>
			virtual ~Semaphore() = default;
  402641:	48 89 c7             	mov    %rax,%rdi
  402644:	48 c7 03 00 41 40 00 	movq   $0x404100,(%rbx)
  40264b:	e8 c0 fb ff ff       	call   402210 <_Unwind_Resume@plt>

0000000000402650 <_ZN3Api16PrioInheritMutexD1Ev>:
		throw System::Errors::construction;
	//GCOV_EXCL_STOP
}


Api::PrioInheritMutex::~PrioInheritMutex()
  402650:	53                   	push   %rbx
  402651:	48 89 fb             	mov    %rdi,%rbx
  402654:	48 c7 07 f8 41 40 00 	movq   $0x4041f8,(%rdi)
{
	pthread_mutexattr_destroy(&this->attribute); //GCOV_EXCL_START
  40265b:	48 8d 7f 30          	lea    0x30(%rdi),%rdi
  40265f:	e8 2c fb ff ff       	call   402190 <pthread_mutexattr_destroy@plt>
	pthread_mutex_destroy(&this->mutex);
  402664:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  402668:	e8 b3 fa ff ff       	call   402120 <pthread_mutex_destroy@plt>
#ifndef _MUTEX_H_
#define _MUTEX_H_
namespace Interface {
	class Mutex {
		public:
			virtual ~Mutex() = default;
  40266d:	48 c7 03 c8 41 40 00 	movq   $0x4041c8,(%rbx)
	//GCOV_EXCL_STOP
}
  402674:	5b                   	pop    %rbx
  402675:	c3                   	ret

0000000000402676 <_ZN3Api16PrioInheritMutexD0Ev>:
Api::PrioInheritMutex::~PrioInheritMutex()
  402676:	53                   	push   %rbx
  402677:	48 89 fb             	mov    %rdi,%rbx
}
  40267a:	e8 d1 ff ff ff       	call   402650 <_ZN3Api16PrioInheritMutexD1Ev>
  40267f:	be 38 00 00 00       	mov    $0x38,%esi
  402684:	48 89 df             	mov    %rbx,%rdi
  402687:	e8 84 fa ff ff       	call   402110 <_ZdlPvm@plt>
  40268c:	5b                   	pop    %rbx
  40268d:	c3                   	ret

000000000040268e <_ZN3Api16PrioInheritMutex4LockEv>:


[[nodiscard]] bool Api::PrioInheritMutex::Lock() noexcept
{
  40268e:	48 83 ec 08          	sub    $0x8,%rsp
	bool isLocked{false};
	isLocked = !static_cast<bool> (pthread_mutex_lock(&this->mutex));
  402692:	48 83 c7 08          	add    $0x8,%rdi
  402696:	e8 e5 fa ff ff       	call   402180 <pthread_mutex_lock@plt>
  40269b:	85 c0                	test   %eax,%eax
  40269d:	0f 94 c0             	sete   %al

	return isLocked;
}
  4026a0:	48 83 c4 08          	add    $0x8,%rsp
  4026a4:	c3                   	ret
  4026a5:	90                   	nop

00000000004026a6 <_ZN3Api16PrioInheritMutex6UnlockEv>:


[[nodiscard]] bool Api::PrioInheritMutex::Unlock() noexcept
{
  4026a6:	48 83 ec 08          	sub    $0x8,%rsp
	bool isUnlocked{false};
	isUnlocked = !static_cast<bool> (pthread_mutex_unlock(&this->mutex));
  4026aa:	48 83 c7 08          	add    $0x8,%rdi
  4026ae:	e8 0d fa ff ff       	call   4020c0 <pthread_mutex_unlock@plt>
  4026b3:	85 c0                	test   %eax,%eax
  4026b5:	0f 94 c0             	sete   %al

	return isUnlocked;
}
  4026b8:	48 83 c4 08          	add    $0x8,%rsp
  4026bc:	c3                   	ret
  4026bd:	90                   	nop

00000000004026be <_ZN3Api16PrioInheritMutexC1Ev>:
Api::PrioInheritMutex::PrioInheritMutex()
  4026be:	55                   	push   %rbp
  4026bf:	53                   	push   %rbx
  4026c0:	48 83 ec 08          	sub    $0x8,%rsp
  4026c4:	48 89 fb             	mov    %rdi,%rbx
	class Mutex {
  4026c7:	48 c7 07 c8 41 40 00 	movq   $0x4041c8,(%rdi)
  4026ce:	48 c7 07 f8 41 40 00 	movq   $0x4041f8,(%rdi)
	if (pthread_mutexattr_init(&this->attribute) != status::ok) //GCOV_EXCL_START
  4026d5:	48 8d 6f 30          	lea    0x30(%rdi),%rbp
  4026d9:	48 89 ef             	mov    %rbp,%rdi
  4026dc:	e8 5f f9 ff ff       	call   402040 <pthread_mutexattr_init@plt>
  4026e1:	85 c0                	test   %eax,%eax
  4026e3:	75 28                	jne    40270d <_ZN3Api16PrioInheritMutexC1Ev+0x4f>
	if (pthread_mutexattr_setprotocol(&this->attribute, PTHREAD_PRIO_INHERIT) != status::ok)
  4026e5:	be 01 00 00 00       	mov    $0x1,%esi
  4026ea:	48 89 ef             	mov    %rbp,%rdi
  4026ed:	e8 4e fb ff ff       	call   402240 <pthread_mutexattr_setprotocol@plt>
  4026f2:	85 c0                	test   %eax,%eax
  4026f4:	75 48                	jne    40273e <_ZN3Api16PrioInheritMutexC1Ev+0x80>
	if (pthread_mutex_init(&this->mutex, &this->attribute) != status::ok)
  4026f6:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  4026fa:	48 89 ee             	mov    %rbp,%rsi
  4026fd:	e8 9e fa ff ff       	call   4021a0 <pthread_mutex_init@plt>
  402702:	85 c0                	test   %eax,%eax
  402704:	75 5a                	jne    402760 <_ZN3Api16PrioInheritMutexC1Ev+0xa2>
}
  402706:	48 83 c4 08          	add    $0x8,%rsp
  40270a:	5b                   	pop    %rbx
  40270b:	5d                   	pop    %rbp
  40270c:	c3                   	ret
		throw System::Errors::construction;
  40270d:	bf 04 00 00 00       	mov    $0x4,%edi
  402712:	e8 69 f9 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  402717:	48 89 c7             	mov    %rax,%rdi
  40271a:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  402720:	ba 00 00 00 00       	mov    $0x0,%edx
  402725:	be 78 40 40 00       	mov    $0x404078,%esi
  40272a:	e8 d1 fa ff ff       	call   402200 <__cxa_throw@plt>
			virtual ~Mutex() = default;
  40272f:	48 89 c7             	mov    %rax,%rdi
  402732:	48 c7 03 c8 41 40 00 	movq   $0x4041c8,(%rbx)
  402739:	e8 d2 fa ff ff       	call   402210 <_Unwind_Resume@plt>
		throw System::Errors::construction;
  40273e:	bf 04 00 00 00       	mov    $0x4,%edi
  402743:	e8 38 f9 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  402748:	48 89 c7             	mov    %rax,%rdi
  40274b:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  402751:	ba 00 00 00 00       	mov    $0x0,%edx
  402756:	be 78 40 40 00       	mov    $0x404078,%esi
  40275b:	e8 a0 fa ff ff       	call   402200 <__cxa_throw@plt>
		throw System::Errors::construction;
  402760:	bf 04 00 00 00       	mov    $0x4,%edi
  402765:	e8 16 f9 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  40276a:	48 89 c7             	mov    %rax,%rdi
  40276d:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  402773:	ba 00 00 00 00       	mov    $0x0,%edx
  402778:	be 78 40 40 00       	mov    $0x404078,%esi
  40277d:	e8 7e fa ff ff       	call   402200 <__cxa_throw@plt>

0000000000402782 <_ZN3Api14RealtimeThreadD1Ev>:
		throw System::Errors::construction;
	//GCOV_EXCL_STOP
}


Api::RealtimeThread::~RealtimeThread()
  402782:	53                   	push   %rbx
  402783:	48 89 fb             	mov    %rdi,%rbx
  402786:	48 c7 07 c0 42 40 00 	movq   $0x4042c0,(%rdi)
{
	pthread_attr_destroy(&this->attribute); //GCOV_EXCL_LINE
  40278d:	48 8d bf 90 00 00 00 	lea    0x90(%rdi),%rdi
  402794:	e8 47 fa ff ff       	call   4021e0 <pthread_attr_destroy@plt>
#ifndef _THREAD_H_
#define _THREAD_H_
namespace Interface {
	class Thread {
		public:
			virtual ~Thread() = default;
  402799:	48 c7 03 90 42 40 00 	movq   $0x404290,(%rbx)
}
  4027a0:	5b                   	pop    %rbx
  4027a1:	c3                   	ret

00000000004027a2 <_ZN3Api14RealtimeThreadD0Ev>:
Api::RealtimeThread::~RealtimeThread()
  4027a2:	53                   	push   %rbx
  4027a3:	48 89 fb             	mov    %rdi,%rbx
}
  4027a6:	e8 d7 ff ff ff       	call   402782 <_ZN3Api14RealtimeThreadD1Ev>
  4027ab:	be d8 00 00 00       	mov    $0xd8,%esi
  4027b0:	48 89 df             	mov    %rbx,%rdi
  4027b3:	e8 58 f9 ff ff       	call   402110 <_ZdlPvm@plt>
  4027b8:	5b                   	pop    %rbx
  4027b9:	c3                   	ret

00000000004027ba <_ZN3Api14RealtimeThread7PrepareEPFPvS1_E>:


[[nodiscard]] bool Api::RealtimeThread::Prepare(void* (*serviceFunction)(void*)) noexcept
{
  4027ba:	48 83 ec 08          	sub    $0x8,%rsp
  4027be:	48 89 f2             	mov    %rsi,%rdx
	bool isStarted{false};
	isStarted = !static_cast<bool> (pthread_create(&this->thread, &this->attribute, serviceFunction, nullptr));
  4027c1:	48 8d b7 90 00 00 00 	lea    0x90(%rdi),%rsi
  4027c8:	48 81 c7 88 00 00 00 	add    $0x88,%rdi
  4027cf:	b9 00 00 00 00       	mov    $0x0,%ecx
  4027d4:	e8 57 fa ff ff       	call   402230 <pthread_create@plt>
  4027d9:	85 c0                	test   %eax,%eax
  4027db:	0f 94 c0             	sete   %al

	return isStarted;
}
  4027de:	48 83 c4 08          	add    $0x8,%rsp
  4027e2:	c3                   	ret
  4027e3:	90                   	nop

00000000004027e4 <_ZN3Api14RealtimeThread5StartEv>:

[[nodiscard]] bool Api::RealtimeThread::Start() noexcept
{
  4027e4:	48 83 ec 08          	sub    $0x8,%rsp
	bool isStopped{false};
	isStopped = !static_cast<bool> (pthread_join(this->thread, nullptr));
  4027e8:	48 8b bf 88 00 00 00 	mov    0x88(%rdi),%rdi
  4027ef:	be 00 00 00 00       	mov    $0x0,%esi
  4027f4:	e8 f7 f8 ff ff       	call   4020f0 <pthread_join@plt>
  4027f9:	85 c0                	test   %eax,%eax
  4027fb:	0f 94 c0             	sete   %al

	return isStopped;
}
  4027fe:	48 83 c4 08          	add    $0x8,%rsp
  402802:	c3                   	ret
  402803:	90                   	nop

0000000000402804 <_ZN3Api14RealtimeThreadC1ERKi>:
Api::RealtimeThread::RealtimeThread(const int& priority)
  402804:	41 54                	push   %r12
  402806:	55                   	push   %rbp
  402807:	53                   	push   %rbx
  402808:	48 83 ec 10          	sub    $0x10,%rsp
  40280c:	48 89 fb             	mov    %rdi,%rbx
  40280f:	49 89 f4             	mov    %rsi,%r12
	class Thread {
  402812:	48 c7 07 90 42 40 00 	movq   $0x404290,(%rdi)
  402819:	48 c7 07 c0 42 40 00 	movq   $0x4042c0,(%rdi)
  402820:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
  402824:	b9 10 00 00 00       	mov    $0x10,%ecx
  402829:	b8 00 00 00 00       	mov    $0x0,%eax
  40282e:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  402831:	48 c7 43 08 01 00 00 	movq   $0x1,0x8(%rbx)
  402838:	00 
  402839:	48 c7 83 88 00 00 00 	movq   $0x0,0x88(%rbx)
  402840:	00 00 00 00 
  402844:	66 0f ef c0          	pxor   %xmm0,%xmm0
  402848:	0f 11 83 90 00 00 00 	movups %xmm0,0x90(%rbx)
  40284f:	0f 11 83 a0 00 00 00 	movups %xmm0,0xa0(%rbx)
  402856:	0f 11 83 b0 00 00 00 	movups %xmm0,0xb0(%rbx)
  40285d:	48 c7 83 c0 00 00 00 	movq   $0x0,0xc0(%rbx)
  402864:	00 00 00 00 
  402868:	c7 83 c8 00 00 00 01 	movl   $0x1,0xc8(%rbx)
  40286f:	00 00 00 
  402872:	c7 83 cc 00 00 00 01 	movl   $0x1,0xcc(%rbx)
  402879:	00 00 00 
  40287c:	c7 83 d0 00 00 00 63 	movl   $0x63,0xd0(%rbx)
  402883:	00 00 00 
	this->threadPriority = sched_get_priority_max(this->policy);
  402886:	bf 01 00 00 00       	mov    $0x1,%edi
  40288b:	e8 70 f8 ff ff       	call   402100 <sched_get_priority_max@plt>
  402890:	89 83 d0 00 00 00    	mov    %eax,0xd0(%rbx)
	if (priority > this->threadPriority) //GCOV_EXCL_START
  402896:	41 3b 04 24          	cmp    (%r12),%eax
  40289a:	7c 69                	jl     402905 <_ZN3Api14RealtimeThreadC1ERKi+0x101>
	if (pthread_attr_init(&this->attribute) != status::ok)
  40289c:	48 8d ab 90 00 00 00 	lea    0x90(%rbx),%rbp
  4028a3:	48 89 ef             	mov    %rbp,%rdi
  4028a6:	e8 95 f8 ff ff       	call   402140 <pthread_attr_init@plt>
  4028ab:	85 c0                	test   %eax,%eax
  4028ad:	0f 85 83 00 00 00    	jne    402936 <_ZN3Api14RealtimeThreadC1ERKi+0x132>
	if (pthread_attr_setinheritsched(&this->attribute, this->inheritSched) != status::ok)
  4028b3:	8b b3 c8 00 00 00    	mov    0xc8(%rbx),%esi
  4028b9:	48 89 ef             	mov    %rbp,%rdi
  4028bc:	e8 6f f8 ff ff       	call   402130 <pthread_attr_setinheritsched@plt>
  4028c1:	85 c0                	test   %eax,%eax
  4028c3:	0f 85 8f 00 00 00    	jne    402958 <_ZN3Api14RealtimeThreadC1ERKi+0x154>
	if (pthread_attr_setschedpolicy(&this->attribute, this->policy) != status::ok)
  4028c9:	8b b3 cc 00 00 00    	mov    0xcc(%rbx),%esi
  4028cf:	48 89 ef             	mov    %rbp,%rdi
  4028d2:	e8 89 f8 ff ff       	call   402160 <pthread_attr_setschedpolicy@plt>
  4028d7:	85 c0                	test   %eax,%eax
  4028d9:	0f 85 9b 00 00 00    	jne    40297a <_ZN3Api14RealtimeThreadC1ERKi+0x176>
	struct sched_param param{priority};
  4028df:	41 8b 04 24          	mov    (%r12),%eax
  4028e3:	89 44 24 0c          	mov    %eax,0xc(%rsp)
	if (pthread_attr_setschedparam(&this->attribute, &param) != status::ok)
  4028e7:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  4028ec:	48 89 ef             	mov    %rbp,%rdi
  4028ef:	e8 9c f7 ff ff       	call   402090 <pthread_attr_setschedparam@plt>
  4028f4:	85 c0                	test   %eax,%eax
  4028f6:	0f 85 a0 00 00 00    	jne    40299c <_ZN3Api14RealtimeThreadC1ERKi+0x198>
}
  4028fc:	48 83 c4 10          	add    $0x10,%rsp
  402900:	5b                   	pop    %rbx
  402901:	5d                   	pop    %rbp
  402902:	41 5c                	pop    %r12
  402904:	c3                   	ret
		throw System::Errors::construction;
  402905:	bf 04 00 00 00       	mov    $0x4,%edi
  40290a:	e8 71 f7 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  40290f:	48 89 c7             	mov    %rax,%rdi
  402912:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  402918:	ba 00 00 00 00       	mov    $0x0,%edx
  40291d:	be 78 40 40 00       	mov    $0x404078,%esi
  402922:	e8 d9 f8 ff ff       	call   402200 <__cxa_throw@plt>
			virtual ~Thread() = default;
  402927:	48 89 c7             	mov    %rax,%rdi
  40292a:	48 c7 03 90 42 40 00 	movq   $0x404290,(%rbx)
  402931:	e8 da f8 ff ff       	call   402210 <_Unwind_Resume@plt>
		throw System::Errors::construction;
  402936:	bf 04 00 00 00       	mov    $0x4,%edi
  40293b:	e8 40 f7 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  402940:	48 89 c7             	mov    %rax,%rdi
  402943:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  402949:	ba 00 00 00 00       	mov    $0x0,%edx
  40294e:	be 78 40 40 00       	mov    $0x404078,%esi
  402953:	e8 a8 f8 ff ff       	call   402200 <__cxa_throw@plt>
		throw System::Errors::construction;
  402958:	bf 04 00 00 00       	mov    $0x4,%edi
  40295d:	e8 1e f7 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  402962:	48 89 c7             	mov    %rax,%rdi
  402965:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  40296b:	ba 00 00 00 00       	mov    $0x0,%edx
  402970:	be 78 40 40 00       	mov    $0x404078,%esi
  402975:	e8 86 f8 ff ff       	call   402200 <__cxa_throw@plt>
		throw System::Errors::construction;
  40297a:	bf 04 00 00 00       	mov    $0x4,%edi
  40297f:	e8 fc f6 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  402984:	48 89 c7             	mov    %rax,%rdi
  402987:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  40298d:	ba 00 00 00 00       	mov    $0x0,%edx
  402992:	be 78 40 40 00       	mov    $0x404078,%esi
  402997:	e8 64 f8 ff ff       	call   402200 <__cxa_throw@plt>
		throw System::Errors::construction;
  40299c:	bf 04 00 00 00       	mov    $0x4,%edi
  4029a1:	e8 da f6 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  4029a6:	48 89 c7             	mov    %rax,%rdi
  4029a9:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  4029af:	ba 00 00 00 00       	mov    $0x0,%edx
  4029b4:	be 78 40 40 00       	mov    $0x404078,%esi
  4029b9:	e8 42 f8 ff ff       	call   402200 <__cxa_throw@plt>

00000000004029be <_ZN3Api14RealtimeThreadC1ERKmRKi>:
Api::RealtimeThread::RealtimeThread(const std::size_t& core, const int& priority)
  4029be:	41 55                	push   %r13
  4029c0:	41 54                	push   %r12
  4029c2:	55                   	push   %rbp
  4029c3:	53                   	push   %rbx
  4029c4:	48 83 ec 18          	sub    $0x18,%rsp
  4029c8:	48 89 fb             	mov    %rdi,%rbx
  4029cb:	49 89 f5             	mov    %rsi,%r13
  4029ce:	49 89 d4             	mov    %rdx,%r12
	class Thread {
  4029d1:	48 c7 07 90 42 40 00 	movq   $0x404290,(%rdi)
  4029d8:	48 c7 07 c0 42 40 00 	movq   $0x4042c0,(%rdi)
  4029df:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
  4029e3:	b9 10 00 00 00       	mov    $0x10,%ecx
  4029e8:	b8 00 00 00 00       	mov    $0x0,%eax
  4029ed:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  4029f0:	48 c7 43 08 01 00 00 	movq   $0x1,0x8(%rbx)
  4029f7:	00 
  4029f8:	48 c7 83 88 00 00 00 	movq   $0x0,0x88(%rbx)
  4029ff:	00 00 00 00 
  402a03:	66 0f ef c0          	pxor   %xmm0,%xmm0
  402a07:	0f 11 83 90 00 00 00 	movups %xmm0,0x90(%rbx)
  402a0e:	0f 11 83 a0 00 00 00 	movups %xmm0,0xa0(%rbx)
  402a15:	0f 11 83 b0 00 00 00 	movups %xmm0,0xb0(%rbx)
  402a1c:	48 c7 83 c0 00 00 00 	movq   $0x0,0xc0(%rbx)
  402a23:	00 00 00 00 
  402a27:	c7 83 c8 00 00 00 01 	movl   $0x1,0xc8(%rbx)
  402a2e:	00 00 00 
  402a31:	c7 83 cc 00 00 00 01 	movl   $0x1,0xcc(%rbx)
  402a38:	00 00 00 
  402a3b:	c7 83 d0 00 00 00 63 	movl   $0x63,0xd0(%rbx)
  402a42:	00 00 00 
	this->threadPriority = sched_get_priority_max(this->policy);
  402a45:	bf 01 00 00 00       	mov    $0x1,%edi
  402a4a:	e8 b1 f6 ff ff       	call   402100 <sched_get_priority_max@plt>
  402a4f:	89 83 d0 00 00 00    	mov    %eax,0xd0(%rbx)
	if (priority > this->threadPriority) //GCOV_EXCL_START
  402a55:	41 3b 04 24          	cmp    (%r12),%eax
  402a59:	0f 8c d6 00 00 00    	jl     402b35 <_ZN3Api14RealtimeThreadC1ERKmRKi+0x177>
	if (pthread_attr_init(&this->attribute) != status::ok)
  402a5f:	48 8d ab 90 00 00 00 	lea    0x90(%rbx),%rbp
  402a66:	48 89 ef             	mov    %rbp,%rdi
  402a69:	e8 d2 f6 ff ff       	call   402140 <pthread_attr_init@plt>
  402a6e:	85 c0                	test   %eax,%eax
  402a70:	0f 85 f0 00 00 00    	jne    402b66 <_ZN3Api14RealtimeThreadC1ERKmRKi+0x1a8>
	if (pthread_attr_setinheritsched(&this->attribute, this->inheritSched) != status::ok)
  402a76:	8b b3 c8 00 00 00    	mov    0xc8(%rbx),%esi
  402a7c:	48 89 ef             	mov    %rbp,%rdi
  402a7f:	e8 ac f6 ff ff       	call   402130 <pthread_attr_setinheritsched@plt>
  402a84:	85 c0                	test   %eax,%eax
  402a86:	0f 85 fc 00 00 00    	jne    402b88 <_ZN3Api14RealtimeThreadC1ERKmRKi+0x1ca>
	if (pthread_attr_setschedpolicy(&this->attribute, this->policy) != status::ok)
  402a8c:	8b b3 cc 00 00 00    	mov    0xcc(%rbx),%esi
  402a92:	48 89 ef             	mov    %rbp,%rdi
  402a95:	e8 c6 f6 ff ff       	call   402160 <pthread_attr_setschedpolicy@plt>
  402a9a:	85 c0                	test   %eax,%eax
  402a9c:	0f 85 08 01 00 00    	jne    402baa <_ZN3Api14RealtimeThreadC1ERKmRKi+0x1ec>
	CPU_ZERO(&this->cpuSet);
  402aa2:	48 8d 53 08          	lea    0x8(%rbx),%rdx
  402aa6:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
  402aad:	00 
  402aae:	48 c7 83 80 00 00 00 	movq   $0x0,0x80(%rbx)
  402ab5:	00 00 00 00 
  402ab9:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
  402abd:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
  402ac1:	48 89 d1             	mov    %rdx,%rcx
  402ac4:	48 29 f9             	sub    %rdi,%rcx
  402ac7:	83 e9 80             	sub    $0xffffff80,%ecx
  402aca:	c1 e9 03             	shr    $0x3,%ecx
  402acd:	89 c9                	mov    %ecx,%ecx
  402acf:	b8 00 00 00 00       	mov    $0x0,%eax
  402ad4:	f3 48 ab             	rep stos %rax,%es:(%rdi)
	CPU_SET(core, &this->cpuSet);
  402ad7:	49 8b 4d 00          	mov    0x0(%r13),%rcx
  402adb:	48 81 f9 ff 03 00 00 	cmp    $0x3ff,%rcx
  402ae2:	77 14                	ja     402af8 <_ZN3Api14RealtimeThreadC1ERKmRKi+0x13a>
  402ae4:	48 89 ce             	mov    %rcx,%rsi
  402ae7:	48 c1 ee 06          	shr    $0x6,%rsi
  402aeb:	b8 01 00 00 00       	mov    $0x1,%eax
  402af0:	48 d3 e0             	shl    %cl,%rax
  402af3:	48 09 44 f3 08       	or     %rax,0x8(%rbx,%rsi,8)
	if (pthread_attr_setaffinity_np(&this->attribute, sizeof(cpu_set_t), &this->cpuSet) != status::ok)
  402af8:	be 80 00 00 00       	mov    $0x80,%esi
  402afd:	48 89 ef             	mov    %rbp,%rdi
  402b00:	e8 9b f5 ff ff       	call   4020a0 <pthread_attr_setaffinity_np@plt>
  402b05:	85 c0                	test   %eax,%eax
  402b07:	0f 85 bf 00 00 00    	jne    402bcc <_ZN3Api14RealtimeThreadC1ERKmRKi+0x20e>
	struct sched_param param{priority};
  402b0d:	41 8b 04 24          	mov    (%r12),%eax
  402b11:	89 44 24 0c          	mov    %eax,0xc(%rsp)
	if (pthread_attr_setschedparam(&this->attribute, &param) != status::ok)
  402b15:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  402b1a:	48 89 ef             	mov    %rbp,%rdi
  402b1d:	e8 6e f5 ff ff       	call   402090 <pthread_attr_setschedparam@plt>
  402b22:	85 c0                	test   %eax,%eax
  402b24:	0f 85 c4 00 00 00    	jne    402bee <_ZN3Api14RealtimeThreadC1ERKmRKi+0x230>
}
  402b2a:	48 83 c4 18          	add    $0x18,%rsp
  402b2e:	5b                   	pop    %rbx
  402b2f:	5d                   	pop    %rbp
  402b30:	41 5c                	pop    %r12
  402b32:	41 5d                	pop    %r13
  402b34:	c3                   	ret
		throw System::Errors::construction;
  402b35:	bf 04 00 00 00       	mov    $0x4,%edi
  402b3a:	e8 41 f5 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  402b3f:	48 89 c7             	mov    %rax,%rdi
  402b42:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  402b48:	ba 00 00 00 00       	mov    $0x0,%edx
  402b4d:	be 78 40 40 00       	mov    $0x404078,%esi
  402b52:	e8 a9 f6 ff ff       	call   402200 <__cxa_throw@plt>
			virtual ~Thread() = default;
  402b57:	48 89 c7             	mov    %rax,%rdi
  402b5a:	48 c7 03 90 42 40 00 	movq   $0x404290,(%rbx)
  402b61:	e8 aa f6 ff ff       	call   402210 <_Unwind_Resume@plt>
		throw System::Errors::construction;
  402b66:	bf 04 00 00 00       	mov    $0x4,%edi
  402b6b:	e8 10 f5 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  402b70:	48 89 c7             	mov    %rax,%rdi
  402b73:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  402b79:	ba 00 00 00 00       	mov    $0x0,%edx
  402b7e:	be 78 40 40 00       	mov    $0x404078,%esi
  402b83:	e8 78 f6 ff ff       	call   402200 <__cxa_throw@plt>
		throw System::Errors::construction;
  402b88:	bf 04 00 00 00       	mov    $0x4,%edi
  402b8d:	e8 ee f4 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  402b92:	48 89 c7             	mov    %rax,%rdi
  402b95:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  402b9b:	ba 00 00 00 00       	mov    $0x0,%edx
  402ba0:	be 78 40 40 00       	mov    $0x404078,%esi
  402ba5:	e8 56 f6 ff ff       	call   402200 <__cxa_throw@plt>
		throw System::Errors::construction;
  402baa:	bf 04 00 00 00       	mov    $0x4,%edi
  402baf:	e8 cc f4 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  402bb4:	48 89 c7             	mov    %rax,%rdi
  402bb7:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  402bbd:	ba 00 00 00 00       	mov    $0x0,%edx
  402bc2:	be 78 40 40 00       	mov    $0x404078,%esi
  402bc7:	e8 34 f6 ff ff       	call   402200 <__cxa_throw@plt>
		throw System::Errors::construction;
  402bcc:	bf 04 00 00 00       	mov    $0x4,%edi
  402bd1:	e8 aa f4 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  402bd6:	48 89 c7             	mov    %rax,%rdi
  402bd9:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  402bdf:	ba 00 00 00 00       	mov    $0x0,%edx
  402be4:	be 78 40 40 00       	mov    $0x404078,%esi
  402be9:	e8 12 f6 ff ff       	call   402200 <__cxa_throw@plt>
		throw System::Errors::construction;
  402bee:	bf 04 00 00 00       	mov    $0x4,%edi
  402bf3:	e8 88 f4 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  402bf8:	48 89 c7             	mov    %rax,%rdi
  402bfb:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  402c01:	ba 00 00 00 00       	mov    $0x0,%edx
  402c06:	be 78 40 40 00       	mov    $0x404078,%esi
  402c0b:	e8 f0 f5 ff ff       	call   402200 <__cxa_throw@plt>

0000000000402c10 <_Z41__static_initialization_and_destruction_0v>:
{
	bool isOff{false};
	isOff = System::Services::Abort(true);

	return isOff;
}
  402c10:	48 83 ec 08          	sub    $0x8,%rsp
  402c14:	80 3d 4d 35 00 00 00 	cmpb   $0x0,0x354d(%rip)        # 406168 <_ZGVN6System8Services15criticalSectionE>
  402c1b:	74 31                	je     402c4e <_Z41__static_initialization_and_destruction_0v+0x3e>
			inline static Api::BinarySemaphore inputSem;
  402c1d:	80 3d 3c 35 00 00 00 	cmpb   $0x0,0x353c(%rip)        # 406160 <_ZGVN6System8Services8inputSemE>
  402c24:	74 4f                	je     402c75 <_Z41__static_initialization_and_destruction_0v+0x65>
			inline static Api::BinarySemaphore processDataSem;
  402c26:	80 3d 2b 35 00 00 00 	cmpb   $0x0,0x352b(%rip)        # 406158 <_ZGVN6System8Services14processDataSemE>
  402c2d:	74 6d                	je     402c9c <_Z41__static_initialization_and_destruction_0v+0x8c>
			inline static Api::BinarySemaphore outputSem;
  402c2f:	80 3d 1a 35 00 00 00 	cmpb   $0x0,0x351a(%rip)        # 406150 <_ZGVN6System8Services9outputSemE>
  402c36:	0f 84 8a 00 00 00    	je     402cc6 <_Z41__static_initialization_and_destruction_0v+0xb6>
			inline static Api::BinarySemaphore sequencerSem;
  402c3c:	80 3d 05 35 00 00 00 	cmpb   $0x0,0x3505(%rip)        # 406148 <_ZGVN6System8Services12sequencerSemE>
  402c43:	0f 84 a7 00 00 00    	je     402cf0 <_Z41__static_initialization_and_destruction_0v+0xe0>
  402c49:	48 83 c4 08          	add    $0x8,%rsp
  402c4d:	c3                   	ret
			inline static Api::PrioInheritMutex criticalSection;
  402c4e:	c6 05 13 35 00 00 01 	movb   $0x1,0x3513(%rip)        # 406168 <_ZGVN6System8Services15criticalSectionE>
  402c55:	bf 80 62 40 00       	mov    $0x406280,%edi
  402c5a:	e8 5f fa ff ff       	call   4026be <_ZN3Api16PrioInheritMutexC1Ev>
  402c5f:	ba 08 40 40 00       	mov    $0x404008,%edx
  402c64:	be 80 62 40 00       	mov    $0x406280,%esi
  402c69:	bf 50 26 40 00       	mov    $0x402650,%edi
  402c6e:	e8 6d f4 ff ff       	call   4020e0 <__cxa_atexit@plt>
  402c73:	eb a8                	jmp    402c1d <_Z41__static_initialization_and_destruction_0v+0xd>
			inline static Api::BinarySemaphore inputSem;
  402c75:	c6 05 e4 34 00 00 01 	movb   $0x1,0x34e4(%rip)        # 406160 <_ZGVN6System8Services8inputSemE>
  402c7c:	bf 40 62 40 00       	mov    $0x406240,%edi
  402c81:	e8 62 f9 ff ff       	call   4025e8 <_ZN3Api15BinarySemaphoreC1Ev>
			inline static Api::PrioInheritMutex criticalSection;
  402c86:	ba 08 40 40 00       	mov    $0x404008,%edx
  402c8b:	be 40 62 40 00       	mov    $0x406240,%esi
  402c90:	bf 82 25 40 00       	mov    $0x402582,%edi
  402c95:	e8 46 f4 ff ff       	call   4020e0 <__cxa_atexit@plt>
  402c9a:	eb 8a                	jmp    402c26 <_Z41__static_initialization_and_destruction_0v+0x16>
			inline static Api::BinarySemaphore processDataSem;
  402c9c:	c6 05 b5 34 00 00 01 	movb   $0x1,0x34b5(%rip)        # 406158 <_ZGVN6System8Services14processDataSemE>
  402ca3:	bf 00 62 40 00       	mov    $0x406200,%edi
  402ca8:	e8 3b f9 ff ff       	call   4025e8 <_ZN3Api15BinarySemaphoreC1Ev>
			inline static Api::PrioInheritMutex criticalSection;
  402cad:	ba 08 40 40 00       	mov    $0x404008,%edx
  402cb2:	be 00 62 40 00       	mov    $0x406200,%esi
  402cb7:	bf 82 25 40 00       	mov    $0x402582,%edi
  402cbc:	e8 1f f4 ff ff       	call   4020e0 <__cxa_atexit@plt>
  402cc1:	e9 69 ff ff ff       	jmp    402c2f <_Z41__static_initialization_and_destruction_0v+0x1f>
			inline static Api::BinarySemaphore outputSem;
  402cc6:	c6 05 83 34 00 00 01 	movb   $0x1,0x3483(%rip)        # 406150 <_ZGVN6System8Services9outputSemE>
  402ccd:	bf c0 61 40 00       	mov    $0x4061c0,%edi
  402cd2:	e8 11 f9 ff ff       	call   4025e8 <_ZN3Api15BinarySemaphoreC1Ev>
			inline static Api::PrioInheritMutex criticalSection;
  402cd7:	ba 08 40 40 00       	mov    $0x404008,%edx
  402cdc:	be c0 61 40 00       	mov    $0x4061c0,%esi
  402ce1:	bf 82 25 40 00       	mov    $0x402582,%edi
  402ce6:	e8 f5 f3 ff ff       	call   4020e0 <__cxa_atexit@plt>
  402ceb:	e9 4c ff ff ff       	jmp    402c3c <_Z41__static_initialization_and_destruction_0v+0x2c>
			inline static Api::BinarySemaphore sequencerSem;
  402cf0:	c6 05 51 34 00 00 01 	movb   $0x1,0x3451(%rip)        # 406148 <_ZGVN6System8Services12sequencerSemE>
  402cf7:	bf 80 61 40 00       	mov    $0x406180,%edi
  402cfc:	e8 e7 f8 ff ff       	call   4025e8 <_ZN3Api15BinarySemaphoreC1Ev>
			inline static Api::PrioInheritMutex criticalSection;
  402d01:	ba 08 40 40 00       	mov    $0x404008,%edx
  402d06:	be 80 61 40 00       	mov    $0x406180,%esi
  402d0b:	bf 82 25 40 00       	mov    $0x402582,%edi
  402d10:	e8 cb f3 ff ff       	call   4020e0 <__cxa_atexit@plt>
  402d15:	e9 2f ff ff ff       	jmp    402c49 <_Z41__static_initialization_and_destruction_0v+0x39>

0000000000402d1a <_ZN6System7Control8ShutdownEv>:
{
  402d1a:	48 83 ec 18          	sub    $0x18,%rsp
	isOff = System::Services::Abort(true);
  402d1e:	c6 44 24 0f 01       	movb   $0x1,0xf(%rsp)
  402d23:	48 8d 7c 24 0f       	lea    0xf(%rsp),%rdi
  402d28:	e8 ed 02 00 00       	call   40301a <_ZN6System8Services5AbortERKb>
}
  402d2d:	48 83 c4 18          	add    $0x18,%rsp
  402d31:	c3                   	ret

0000000000402d32 <_GLOBAL__sub_I__ZN6System7ControlC2ERKi>:
  402d32:	48 83 ec 08          	sub    $0x8,%rsp
  402d36:	e8 d5 fe ff ff       	call   402c10 <_Z41__static_initialization_and_destruction_0v>
  402d3b:	48 83 c4 08          	add    $0x8,%rsp
  402d3f:	c3                   	ret

0000000000402d40 <_ZN6System7ControlC1ERKi>:
System::Control::Control(const pid_t& pid) //GCOVR_EXCL_START
  402d40:	41 57                	push   %r15
  402d42:	41 56                	push   %r14
  402d44:	41 55                	push   %r13
  402d46:	41 54                	push   %r12
  402d48:	55                   	push   %rbp
  402d49:	53                   	push   %rbx
  402d4a:	48 83 ec 28          	sub    $0x28,%rsp
  402d4e:	48 89 fb             	mov    %rdi,%rbx
  402d51:	48 89 f5             	mov    %rsi,%rbp
  402d54:	c7 07 63 00 00 00    	movl   $0x63,(%rdi)
  402d5a:	c6 47 04 00          	movb   $0x0,0x4(%rdi)
  402d5e:	c7 47 08 01 00 00 00 	movl   $0x1,0x8(%rdi)
  402d65:	4c 8d 67 10          	lea    0x10(%rdi),%r12
  402d69:	c7 44 24 10 62 00 00 	movl   $0x62,0x10(%rsp)
  402d70:	00 
  402d71:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  402d76:	4c 89 e7             	mov    %r12,%rdi
  402d79:	e8 86 fa ff ff       	call   402804 <_ZN3Api14RealtimeThreadC1ERKi>
  402d7e:	4c 8d ab e8 00 00 00 	lea    0xe8(%rbx),%r13
  402d85:	8b 03                	mov    (%rbx),%eax
  402d87:	83 e8 02             	sub    $0x2,%eax
  402d8a:	89 44 24 14          	mov    %eax,0x14(%rsp)
  402d8e:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
  402d93:	4c 89 ef             	mov    %r13,%rdi
  402d96:	e8 69 fa ff ff       	call   402804 <_ZN3Api14RealtimeThreadC1ERKi>
  402d9b:	4c 8d b3 c0 01 00 00 	lea    0x1c0(%rbx),%r14
  402da2:	8b 03                	mov    (%rbx),%eax
  402da4:	83 e8 03             	sub    $0x3,%eax
  402da7:	89 44 24 18          	mov    %eax,0x18(%rsp)
  402dab:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
  402db0:	4c 89 f7             	mov    %r14,%rdi
  402db3:	e8 4c fa ff ff       	call   402804 <_ZN3Api14RealtimeThreadC1ERKi>
  402db8:	4c 8d bb 98 02 00 00 	lea    0x298(%rbx),%r15
  402dbf:	8b 03                	mov    (%rbx),%eax
  402dc1:	83 e8 04             	sub    $0x4,%eax
  402dc4:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
  402dc8:	48 8d 74 24 1c       	lea    0x1c(%rsp),%rsi
  402dcd:	4c 89 ff             	mov    %r15,%rdi
  402dd0:	e8 2f fa ff ff       	call   402804 <_ZN3Api14RealtimeThreadC1ERKi>
	struct sched_param param{0};
  402dd5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
  402ddc:	00 
	this->priority = sched_get_priority_max(this->policy);
  402ddd:	8b 7b 08             	mov    0x8(%rbx),%edi
  402de0:	e8 1b f3 ff ff       	call   402100 <sched_get_priority_max@plt>
  402de5:	89 03                	mov    %eax,(%rbx)
	param.sched_priority = this->priority;
  402de7:	89 44 24 0c          	mov    %eax,0xc(%rsp)
	if (sched_setscheduler(pid, this->policy, &param) != status::ok)
  402deb:	8b 73 08             	mov    0x8(%rbx),%esi
  402dee:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
  402df3:	8b 7d 00             	mov    0x0(%rbp),%edi
  402df6:	e8 b5 f3 ff ff       	call   4021b0 <sched_setscheduler@plt>
  402dfb:	85 c0                	test   %eax,%eax
  402dfd:	75 0f                	jne    402e0e <_ZN6System7ControlC1ERKi+0xce>
}
  402dff:	48 83 c4 28          	add    $0x28,%rsp
  402e03:	5b                   	pop    %rbx
  402e04:	5d                   	pop    %rbp
  402e05:	41 5c                	pop    %r12
  402e07:	41 5d                	pop    %r13
  402e09:	41 5e                	pop    %r14
  402e0b:	41 5f                	pop    %r15
  402e0d:	c3                   	ret
		throw System::Errors::construction;
  402e0e:	bf 04 00 00 00       	mov    $0x4,%edi
  402e13:	e8 68 f2 ff ff       	call   402080 <__cxa_allocate_exception@plt>
  402e18:	48 89 c7             	mov    %rax,%rdi
  402e1b:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  402e21:	ba 00 00 00 00       	mov    $0x0,%edx
  402e26:	be 78 40 40 00       	mov    $0x404078,%esi
  402e2b:	e8 d0 f3 ff ff       	call   402200 <__cxa_throw@plt>
}
  402e30:	48 89 c3             	mov    %rax,%rbx
  402e33:	4c 89 ff             	mov    %r15,%rdi
  402e36:	e8 47 f9 ff ff       	call   402782 <_ZN3Api14RealtimeThreadD1Ev>
  402e3b:	4c 89 f7             	mov    %r14,%rdi
  402e3e:	e8 3f f9 ff ff       	call   402782 <_ZN3Api14RealtimeThreadD1Ev>
  402e43:	4c 89 ef             	mov    %r13,%rdi
  402e46:	e8 37 f9 ff ff       	call   402782 <_ZN3Api14RealtimeThreadD1Ev>
  402e4b:	4c 89 e7             	mov    %r12,%rdi
  402e4e:	e8 2f f9 ff ff       	call   402782 <_ZN3Api14RealtimeThreadD1Ev>
  402e53:	48 89 df             	mov    %rbx,%rdi
  402e56:	e8 b5 f3 ff ff       	call   402210 <_Unwind_Resume@plt>
  402e5b:	48 89 c3             	mov    %rax,%rbx
  402e5e:	eb db                	jmp    402e3b <_ZN6System7ControlC1ERKi+0xfb>
  402e60:	48 89 c3             	mov    %rax,%rbx
  402e63:	eb de                	jmp    402e43 <_ZN6System7ControlC1ERKi+0x103>
  402e65:	48 89 c3             	mov    %rax,%rbx
  402e68:	eb e1                	jmp    402e4b <_ZN6System7ControlC1ERKi+0x10b>

0000000000402e6a <_ZN6System7Control5StartEv>:
{
  402e6a:	41 55                	push   %r13
  402e6c:	41 54                	push   %r12
  402e6e:	55                   	push   %rbp
  402e6f:	53                   	push   %rbx
  402e70:	48 83 ec 08          	sub    $0x8,%rsp
  402e74:	48 89 fb             	mov    %rdi,%rbx
	if (this->sequencer.Prepare(&System::Services::Sequencer) == false)
  402e77:	48 8d 6f 10          	lea    0x10(%rdi),%rbp
  402e7b:	be 46 32 40 00       	mov    $0x403246,%esi
  402e80:	48 89 ef             	mov    %rbp,%rdi
  402e83:	e8 32 f9 ff ff       	call   4027ba <_ZN3Api14RealtimeThread7PrepareEPFPvS1_E>
  402e88:	84 c0                	test   %al,%al
  402e8a:	75 0b                	jne    402e97 <_ZN6System7Control5StartEv+0x2d>
}
  402e8c:	48 83 c4 08          	add    $0x8,%rsp
  402e90:	5b                   	pop    %rbx
  402e91:	5d                   	pop    %rbp
  402e92:	41 5c                	pop    %r12
  402e94:	41 5d                	pop    %r13
  402e96:	c3                   	ret
	if (this->input.Prepare(&System::Services::Input) == false)
  402e97:	4c 8d a3 e8 00 00 00 	lea    0xe8(%rbx),%r12
  402e9e:	be d2 30 40 00       	mov    $0x4030d2,%esi
  402ea3:	4c 89 e7             	mov    %r12,%rdi
  402ea6:	e8 0f f9 ff ff       	call   4027ba <_ZN3Api14RealtimeThread7PrepareEPFPvS1_E>
  402eab:	84 c0                	test   %al,%al
  402ead:	74 dd                	je     402e8c <_ZN6System7Control5StartEv+0x22>
	if (this->processData.Prepare(&System::Services::ProcessData) == false)
  402eaf:	4c 8d ab c0 01 00 00 	lea    0x1c0(%rbx),%r13
  402eb6:	be 32 30 40 00       	mov    $0x403032,%esi
  402ebb:	4c 89 ef             	mov    %r13,%rdi
  402ebe:	e8 f7 f8 ff ff       	call   4027ba <_ZN3Api14RealtimeThread7PrepareEPFPvS1_E>
  402ec3:	84 c0                	test   %al,%al
  402ec5:	74 c5                	je     402e8c <_ZN6System7Control5StartEv+0x22>
	if (this->output.Prepare(&System::Services::Output) == false)
  402ec7:	48 81 c3 98 02 00 00 	add    $0x298,%rbx
  402ece:	be 82 30 40 00       	mov    $0x403082,%esi
  402ed3:	48 89 df             	mov    %rbx,%rdi
  402ed6:	e8 df f8 ff ff       	call   4027ba <_ZN3Api14RealtimeThread7PrepareEPFPvS1_E>
  402edb:	84 c0                	test   %al,%al
  402edd:	74 ad                	je     402e8c <_ZN6System7Control5StartEv+0x22>
	if (this->sequencer.Start() == false)
  402edf:	48 89 ef             	mov    %rbp,%rdi
  402ee2:	e8 fd f8 ff ff       	call   4027e4 <_ZN3Api14RealtimeThread5StartEv>
  402ee7:	84 c0                	test   %al,%al
  402ee9:	74 a1                	je     402e8c <_ZN6System7Control5StartEv+0x22>
	if (this->input.Start() == false)
  402eeb:	4c 89 e7             	mov    %r12,%rdi
  402eee:	e8 f1 f8 ff ff       	call   4027e4 <_ZN3Api14RealtimeThread5StartEv>
  402ef3:	84 c0                	test   %al,%al
  402ef5:	74 95                	je     402e8c <_ZN6System7Control5StartEv+0x22>
	if (this->processData.Start() == false)
  402ef7:	4c 89 ef             	mov    %r13,%rdi
  402efa:	e8 e5 f8 ff ff       	call   4027e4 <_ZN3Api14RealtimeThread5StartEv>
  402eff:	84 c0                	test   %al,%al
  402f01:	74 89                	je     402e8c <_ZN6System7Control5StartEv+0x22>
	if (this->output.Start() == false)
  402f03:	48 89 df             	mov    %rbx,%rdi
  402f06:	e8 d9 f8 ff ff       	call   4027e4 <_ZN3Api14RealtimeThread5StartEv>
  402f0b:	e9 7c ff ff ff       	jmp    402e8c <_ZN6System7Control5StartEv+0x22>

0000000000402f10 <_Z41__static_initialization_and_destruction_0v>:
		System::Services::abortOutput = isAborted;
    }
	//GCOV_EXCL_STOP

	return isAborted;
}
  402f10:	48 83 ec 08          	sub    $0x8,%rsp
  402f14:	80 3d 4d 32 00 00 00 	cmpb   $0x0,0x324d(%rip)        # 406168 <_ZGVN6System8Services15criticalSectionE>
  402f1b:	74 31                	je     402f4e <_Z41__static_initialization_and_destruction_0v+0x3e>
			inline static Api::BinarySemaphore inputSem;
  402f1d:	80 3d 3c 32 00 00 00 	cmpb   $0x0,0x323c(%rip)        # 406160 <_ZGVN6System8Services8inputSemE>
  402f24:	74 4f                	je     402f75 <_Z41__static_initialization_and_destruction_0v+0x65>
			inline static Api::BinarySemaphore processDataSem;
  402f26:	80 3d 2b 32 00 00 00 	cmpb   $0x0,0x322b(%rip)        # 406158 <_ZGVN6System8Services14processDataSemE>
  402f2d:	74 6d                	je     402f9c <_Z41__static_initialization_and_destruction_0v+0x8c>
			inline static Api::BinarySemaphore outputSem;
  402f2f:	80 3d 1a 32 00 00 00 	cmpb   $0x0,0x321a(%rip)        # 406150 <_ZGVN6System8Services9outputSemE>
  402f36:	0f 84 8a 00 00 00    	je     402fc6 <_Z41__static_initialization_and_destruction_0v+0xb6>
			inline static Api::BinarySemaphore sequencerSem;
  402f3c:	80 3d 05 32 00 00 00 	cmpb   $0x0,0x3205(%rip)        # 406148 <_ZGVN6System8Services12sequencerSemE>
  402f43:	0f 84 a7 00 00 00    	je     402ff0 <_Z41__static_initialization_and_destruction_0v+0xe0>
  402f49:	48 83 c4 08          	add    $0x8,%rsp
  402f4d:	c3                   	ret
			inline static Api::PrioInheritMutex criticalSection;
  402f4e:	c6 05 13 32 00 00 01 	movb   $0x1,0x3213(%rip)        # 406168 <_ZGVN6System8Services15criticalSectionE>
  402f55:	bf 80 62 40 00       	mov    $0x406280,%edi
  402f5a:	e8 5f f7 ff ff       	call   4026be <_ZN3Api16PrioInheritMutexC1Ev>
  402f5f:	ba 08 40 40 00       	mov    $0x404008,%edx
  402f64:	be 80 62 40 00       	mov    $0x406280,%esi
  402f69:	bf 50 26 40 00       	mov    $0x402650,%edi
  402f6e:	e8 6d f1 ff ff       	call   4020e0 <__cxa_atexit@plt>
  402f73:	eb a8                	jmp    402f1d <_Z41__static_initialization_and_destruction_0v+0xd>
			inline static Api::BinarySemaphore inputSem;
  402f75:	c6 05 e4 31 00 00 01 	movb   $0x1,0x31e4(%rip)        # 406160 <_ZGVN6System8Services8inputSemE>
  402f7c:	bf 40 62 40 00       	mov    $0x406240,%edi
  402f81:	e8 62 f6 ff ff       	call   4025e8 <_ZN3Api15BinarySemaphoreC1Ev>
			inline static Api::PrioInheritMutex criticalSection;
  402f86:	ba 08 40 40 00       	mov    $0x404008,%edx
  402f8b:	be 40 62 40 00       	mov    $0x406240,%esi
  402f90:	bf 82 25 40 00       	mov    $0x402582,%edi
  402f95:	e8 46 f1 ff ff       	call   4020e0 <__cxa_atexit@plt>
  402f9a:	eb 8a                	jmp    402f26 <_Z41__static_initialization_and_destruction_0v+0x16>
			inline static Api::BinarySemaphore processDataSem;
  402f9c:	c6 05 b5 31 00 00 01 	movb   $0x1,0x31b5(%rip)        # 406158 <_ZGVN6System8Services14processDataSemE>
  402fa3:	bf 00 62 40 00       	mov    $0x406200,%edi
  402fa8:	e8 3b f6 ff ff       	call   4025e8 <_ZN3Api15BinarySemaphoreC1Ev>
			inline static Api::PrioInheritMutex criticalSection;
  402fad:	ba 08 40 40 00       	mov    $0x404008,%edx
  402fb2:	be 00 62 40 00       	mov    $0x406200,%esi
  402fb7:	bf 82 25 40 00       	mov    $0x402582,%edi
  402fbc:	e8 1f f1 ff ff       	call   4020e0 <__cxa_atexit@plt>
  402fc1:	e9 69 ff ff ff       	jmp    402f2f <_Z41__static_initialization_and_destruction_0v+0x1f>
			inline static Api::BinarySemaphore outputSem;
  402fc6:	c6 05 83 31 00 00 01 	movb   $0x1,0x3183(%rip)        # 406150 <_ZGVN6System8Services9outputSemE>
  402fcd:	bf c0 61 40 00       	mov    $0x4061c0,%edi
  402fd2:	e8 11 f6 ff ff       	call   4025e8 <_ZN3Api15BinarySemaphoreC1Ev>
			inline static Api::PrioInheritMutex criticalSection;
  402fd7:	ba 08 40 40 00       	mov    $0x404008,%edx
  402fdc:	be c0 61 40 00       	mov    $0x4061c0,%esi
  402fe1:	bf 82 25 40 00       	mov    $0x402582,%edi
  402fe6:	e8 f5 f0 ff ff       	call   4020e0 <__cxa_atexit@plt>
  402feb:	e9 4c ff ff ff       	jmp    402f3c <_Z41__static_initialization_and_destruction_0v+0x2c>
			inline static Api::BinarySemaphore sequencerSem;
  402ff0:	c6 05 51 31 00 00 01 	movb   $0x1,0x3151(%rip)        # 406148 <_ZGVN6System8Services12sequencerSemE>
  402ff7:	bf 80 61 40 00       	mov    $0x406180,%edi
  402ffc:	e8 e7 f5 ff ff       	call   4025e8 <_ZN3Api15BinarySemaphoreC1Ev>
			inline static Api::PrioInheritMutex criticalSection;
  403001:	ba 08 40 40 00       	mov    $0x404008,%edx
  403006:	be 80 61 40 00       	mov    $0x406180,%esi
  40300b:	bf 82 25 40 00       	mov    $0x402582,%edi
  403010:	e8 cb f0 ff ff       	call   4020e0 <__cxa_atexit@plt>
  403015:	e9 2f ff ff ff       	jmp    402f49 <_Z41__static_initialization_and_destruction_0v+0x39>

000000000040301a <_ZN6System8Services5AbortERKb>:
	System::Services::abortSystem = abort;
  40301a:	0f b6 07             	movzbl (%rdi),%eax
  40301d:	88 05 98 32 00 00    	mov    %al,0x3298(%rip)        # 4062bb <_ZN6System8Services11abortSystemE>
}
  403023:	c3                   	ret

0000000000403024 <_GLOBAL__sub_I__ZN6System8Services5InputEPv>:
}
  403024:	48 83 ec 08          	sub    $0x8,%rsp
  403028:	e8 e3 fe ff ff       	call   402f10 <_Z41__static_initialization_and_destruction_0v>
  40302d:	48 83 c4 08          	add    $0x8,%rsp
  403031:	c3                   	ret

0000000000403032 <_ZN6System8Services11ProcessDataEPv>:
{
  403032:	55                   	push   %rbp
  403033:	53                   	push   %rbx
  403034:	48 83 ec 08          	sub    $0x8,%rsp
	int num{0};
  403038:	bb 00 00 00 00       	mov    $0x0,%ebx
	while (!System::Services::abortProcessData) //GCOV_EXCL_START
  40303d:	eb 22                	jmp    403061 <_ZN6System8Services11ProcessDataEPv+0x2f>
		syslog(LOG_CRIT, "Data Process on core: %d for the %d cycle\n", sched_getcpu(), num++);
  40303f:	8d 6b 01             	lea    0x1(%rbx),%ebp
  403042:	e8 09 f1 ff ff       	call   402150 <sched_getcpu@plt>
  403047:	89 c2                	mov    %eax,%edx
  403049:	89 d9                	mov    %ebx,%ecx
  40304b:	be e0 42 40 00       	mov    $0x4042e0,%esi
  403050:	bf 02 00 00 00       	mov    $0x2,%edi
  403055:	b8 00 00 00 00       	mov    $0x0,%eax
  40305a:	e8 f1 ef ff ff       	call   402050 <syslog@plt>
  40305f:	89 eb                	mov    %ebp,%ebx
	while (!System::Services::abortProcessData) //GCOV_EXCL_START
  403061:	80 3d 51 32 00 00 00 	cmpb   $0x0,0x3251(%rip)        # 4062b9 <_ZN6System8Services16abortProcessDataE>
  403068:	75 0e                	jne    403078 <_ZN6System8Services11ProcessDataEPv+0x46>
		if (System::Services::processDataSem.Acquire() == false)
  40306a:	bf 00 62 40 00       	mov    $0x406200,%edi
  40306f:	e8 44 f5 ff ff       	call   4025b8 <_ZN3Api15BinarySemaphore7AcquireEv>
  403074:	84 c0                	test   %al,%al
  403076:	75 c7                	jne    40303f <_ZN6System8Services11ProcessDataEPv+0xd>
	pthread_exit(nullptr);
  403078:	bf 00 00 00 00       	mov    $0x0,%edi
  40307d:	e8 9e f1 ff ff       	call   402220 <pthread_exit@plt>

0000000000403082 <_ZN6System8Services6OutputEPv>:
{
  403082:	55                   	push   %rbp
  403083:	53                   	push   %rbx
  403084:	48 83 ec 08          	sub    $0x8,%rsp
	int num{0};
  403088:	bb 00 00 00 00       	mov    $0x0,%ebx
	while (!System::Services::abortOutput) //GCOV_EXCL_START
  40308d:	eb 22                	jmp    4030b1 <_ZN6System8Services6OutputEPv+0x2f>
		syslog(LOG_CRIT, "Data Output on core: %d for the %d cycle\n", sched_getcpu(), num++);
  40308f:	8d 6b 01             	lea    0x1(%rbx),%ebp
  403092:	e8 b9 f0 ff ff       	call   402150 <sched_getcpu@plt>
  403097:	89 c2                	mov    %eax,%edx
  403099:	89 d9                	mov    %ebx,%ecx
  40309b:	be 10 43 40 00       	mov    $0x404310,%esi
  4030a0:	bf 02 00 00 00       	mov    $0x2,%edi
  4030a5:	b8 00 00 00 00       	mov    $0x0,%eax
  4030aa:	e8 a1 ef ff ff       	call   402050 <syslog@plt>
  4030af:	89 eb                	mov    %ebp,%ebx
	while (!System::Services::abortOutput) //GCOV_EXCL_START
  4030b1:	80 3d 00 32 00 00 00 	cmpb   $0x0,0x3200(%rip)        # 4062b8 <_ZN6System8Services11abortOutputE>
  4030b8:	75 0e                	jne    4030c8 <_ZN6System8Services6OutputEPv+0x46>
		if (System::Services::outputSem.Acquire() == false)
  4030ba:	bf c0 61 40 00       	mov    $0x4061c0,%edi
  4030bf:	e8 f4 f4 ff ff       	call   4025b8 <_ZN3Api15BinarySemaphore7AcquireEv>
  4030c4:	84 c0                	test   %al,%al
  4030c6:	75 c7                	jne    40308f <_ZN6System8Services6OutputEPv+0xd>
	pthread_exit(nullptr);
  4030c8:	bf 00 00 00 00       	mov    $0x0,%edi
  4030cd:	e8 4e f1 ff ff       	call   402220 <pthread_exit@plt>

00000000004030d2 <_ZN6System8Services5InputEPv>:
{
  4030d2:	55                   	push   %rbp
  4030d3:	53                   	push   %rbx
  4030d4:	48 83 ec 08          	sub    $0x8,%rsp
	int num{0};
  4030d8:	bb 00 00 00 00       	mov    $0x0,%ebx
	while (!System::Services::abortInput) //GCOV_EXCL_START
  4030dd:	eb 38                	jmp    403117 <_ZN6System8Services5InputEPv+0x45>
            syslog(LOG_CRIT, "Entered Critical Section For Input\n");
  4030df:	be 40 43 40 00       	mov    $0x404340,%esi
  4030e4:	bf 02 00 00 00       	mov    $0x2,%edi
  4030e9:	b8 00 00 00 00       	mov    $0x0,%eax
  4030ee:	e8 5d ef ff ff       	call   402050 <syslog@plt>
  4030f3:	eb 47                	jmp    40313c <_ZN6System8Services5InputEPv+0x6a>
		syslog(LOG_CRIT, "Data Input on core: %d for the %d cycle\n", sched_getcpu(), num++);
  4030f5:	8d 6b 01             	lea    0x1(%rbx),%ebp
  4030f8:	e8 53 f0 ff ff       	call   402150 <sched_getcpu@plt>
  4030fd:	89 c2                	mov    %eax,%edx
  4030ff:	89 d9                	mov    %ebx,%ecx
  403101:	be 90 43 40 00       	mov    $0x404390,%esi
  403106:	bf 02 00 00 00       	mov    $0x2,%edi
  40310b:	b8 00 00 00 00       	mov    $0x0,%eax
  403110:	e8 3b ef ff ff       	call   402050 <syslog@plt>
  403115:	89 eb                	mov    %ebp,%ebx
	while (!System::Services::abortInput) //GCOV_EXCL_START
  403117:	80 3d 9c 31 00 00 00 	cmpb   $0x0,0x319c(%rip)        # 4062ba <_ZN6System8Services10abortInputE>
  40311e:	75 40                	jne    403160 <_ZN6System8Services5InputEPv+0x8e>
		if (System::Services::inputSem.Acquire() == false)
  403120:	bf 40 62 40 00       	mov    $0x406240,%edi
  403125:	e8 8e f4 ff ff       	call   4025b8 <_ZN3Api15BinarySemaphore7AcquireEv>
  40312a:	84 c0                	test   %al,%al
  40312c:	74 32                	je     403160 <_ZN6System8Services5InputEPv+0x8e>
        if (System::Services::criticalSection.Lock() == true)
  40312e:	bf 80 62 40 00       	mov    $0x406280,%edi
  403133:	e8 56 f5 ff ff       	call   40268e <_ZN3Api16PrioInheritMutex4LockEv>
  403138:	84 c0                	test   %al,%al
  40313a:	75 a3                	jne    4030df <_ZN6System8Services5InputEPv+0xd>
        if (System::Services::criticalSection.Unlock() == true)
  40313c:	bf 80 62 40 00       	mov    $0x406280,%edi
  403141:	e8 60 f5 ff ff       	call   4026a6 <_ZN3Api16PrioInheritMutex6UnlockEv>
  403146:	84 c0                	test   %al,%al
  403148:	74 ab                	je     4030f5 <_ZN6System8Services5InputEPv+0x23>
            syslog(LOG_CRIT, "Left Critical Section For Input\n");
  40314a:	be 68 43 40 00       	mov    $0x404368,%esi
  40314f:	bf 02 00 00 00       	mov    $0x2,%edi
  403154:	b8 00 00 00 00       	mov    $0x0,%eax
  403159:	e8 f2 ee ff ff       	call   402050 <syslog@plt>
  40315e:	eb 95                	jmp    4030f5 <_ZN6System8Services5InputEPv+0x23>
	pthread_exit(nullptr);
  403160:	bf 00 00 00 00       	mov    $0x0,%edi
  403165:	e8 b6 f0 ff ff       	call   402220 <pthread_exit@plt>

000000000040316a <_ZN6System8Services13InputReleasedERKi>:
	if ((count % Hz::FIFTY) == STATUS::OK)
  40316a:	f6 07 01             	testb  $0x1,(%rdi)
  40316d:	74 06                	je     403175 <_ZN6System8Services13InputReleasedERKi+0xb>
	bool isReleased{true};
  40316f:	b8 01 00 00 00       	mov    $0x1,%eax
}
  403174:	c3                   	ret
{
  403175:	48 83 ec 08          	sub    $0x8,%rsp
		isReleased = System::Services::inputSem.Release();
  403179:	bf 40 62 40 00       	mov    $0x406240,%edi
  40317e:	e8 4d f4 ff ff       	call   4025d0 <_ZN3Api15BinarySemaphore7ReleaseEv>
}
  403183:	48 83 c4 08          	add    $0x8,%rsp
  403187:	c3                   	ret

0000000000403188 <_ZN6System8Services19ProcessDataReleasedERKi>:
	if ((count % Hz::TEN) == STATUS::OK)
  403188:	8b 17                	mov    (%rdi),%edx
  40318a:	48 63 c2             	movslq %edx,%rax
  40318d:	48 69 c0 67 66 66 66 	imul   $0x66666667,%rax,%rax
  403194:	48 c1 f8 22          	sar    $0x22,%rax
  403198:	89 d1                	mov    %edx,%ecx
  40319a:	c1 f9 1f             	sar    $0x1f,%ecx
  40319d:	29 c8                	sub    %ecx,%eax
  40319f:	8d 04 80             	lea    (%rax,%rax,4),%eax
  4031a2:	01 c0                	add    %eax,%eax
  4031a4:	39 c2                	cmp    %eax,%edx
  4031a6:	74 06                	je     4031ae <_ZN6System8Services19ProcessDataReleasedERKi+0x26>
	bool isReleased{true};
  4031a8:	b8 01 00 00 00       	mov    $0x1,%eax
}
  4031ad:	c3                   	ret
{
  4031ae:	48 83 ec 08          	sub    $0x8,%rsp
		isReleased = System::Services::processDataSem.Release();
  4031b2:	bf 00 62 40 00       	mov    $0x406200,%edi
  4031b7:	e8 14 f4 ff ff       	call   4025d0 <_ZN3Api15BinarySemaphore7ReleaseEv>
}
  4031bc:	48 83 c4 08          	add    $0x8,%rsp
  4031c0:	c3                   	ret
  4031c1:	90                   	nop

00000000004031c2 <_ZN6System8Services14OutputReleasedERKi>:
	if ((count % Hz::FIVE) == STATUS::OK)
  4031c2:	8b 17                	mov    (%rdi),%edx
  4031c4:	48 63 c2             	movslq %edx,%rax
  4031c7:	48 69 c0 67 66 66 66 	imul   $0x66666667,%rax,%rax
  4031ce:	48 c1 f8 23          	sar    $0x23,%rax
  4031d2:	89 d1                	mov    %edx,%ecx
  4031d4:	c1 f9 1f             	sar    $0x1f,%ecx
  4031d7:	29 c8                	sub    %ecx,%eax
  4031d9:	8d 04 80             	lea    (%rax,%rax,4),%eax
  4031dc:	c1 e0 02             	shl    $0x2,%eax
  4031df:	39 c2                	cmp    %eax,%edx
  4031e1:	74 06                	je     4031e9 <_ZN6System8Services14OutputReleasedERKi+0x27>
	bool isReleased{true};
  4031e3:	b8 01 00 00 00       	mov    $0x1,%eax
}
  4031e8:	c3                   	ret
{
  4031e9:	48 83 ec 08          	sub    $0x8,%rsp
		isReleased = System::Services::outputSem.Release();
  4031ed:	bf c0 61 40 00       	mov    $0x4061c0,%edi
  4031f2:	e8 d9 f3 ff ff       	call   4025d0 <_ZN3Api15BinarySemaphore7ReleaseEv>
}
  4031f7:	48 83 c4 08          	add    $0x8,%rsp
  4031fb:	c3                   	ret

00000000004031fc <_ZN6System8Services17EnsureThreadAbortEv>:
{
  4031fc:	53                   	push   %rbx
	if (System::Services::inputSem.Release() == true) //GCOV_EXCL_START
  4031fd:	bf 40 62 40 00       	mov    $0x406240,%edi
  403202:	e8 c9 f3 ff ff       	call   4025d0 <_ZN3Api15BinarySemaphore7ReleaseEv>
  403207:	89 c3                	mov    %eax,%ebx
  403209:	84 c0                	test   %al,%al
  40320b:	74 07                	je     403214 <_ZN6System8Services17EnsureThreadAbortEv+0x18>
		System::Services::abortInput = isAborted;
  40320d:	c6 05 a6 30 00 00 01 	movb   $0x1,0x30a6(%rip)        # 4062ba <_ZN6System8Services10abortInputE>
	if (System::Services::processDataSem.Release() == true)
  403214:	bf 00 62 40 00       	mov    $0x406200,%edi
  403219:	e8 b2 f3 ff ff       	call   4025d0 <_ZN3Api15BinarySemaphore7ReleaseEv>
  40321e:	84 c0                	test   %al,%al
  403220:	74 09                	je     40322b <_ZN6System8Services17EnsureThreadAbortEv+0x2f>
		System::Services::abortProcessData = isAborted;
  403222:	c6 05 90 30 00 00 01 	movb   $0x1,0x3090(%rip)        # 4062b9 <_ZN6System8Services16abortProcessDataE>
        isAborted = true;
  403229:	89 c3                	mov    %eax,%ebx
	if (System::Services::outputSem.Release() == true)
  40322b:	bf c0 61 40 00       	mov    $0x4061c0,%edi
  403230:	e8 9b f3 ff ff       	call   4025d0 <_ZN3Api15BinarySemaphore7ReleaseEv>
  403235:	84 c0                	test   %al,%al
  403237:	74 09                	je     403242 <_ZN6System8Services17EnsureThreadAbortEv+0x46>
		System::Services::abortOutput = isAborted;
  403239:	c6 05 78 30 00 00 01 	movb   $0x1,0x3078(%rip)        # 4062b8 <_ZN6System8Services11abortOutputE>
        isAborted = true;
  403240:	89 c3                	mov    %eax,%ebx
}
  403242:	89 d8                	mov    %ebx,%eax
  403244:	5b                   	pop    %rbx
  403245:	c3                   	ret

0000000000403246 <_ZN6System8Services9SequencerEPv>:
{
  403246:	53                   	push   %rbx
  403247:	48 83 ec 20          	sub    $0x20,%rsp
	int executionCount{0};
  40324b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
  403252:	00 
	while (!System::Services::abortSystem) //GCOV_EXCL_START
  403253:	80 3d 61 30 00 00 00 	cmpb   $0x0,0x3061(%rip)        # 4062bb <_ZN6System8Services11abortSystemE>
  40325a:	75 52                	jne    4032ae <_ZN6System8Services9SequencerEPv+0x68>
		std::this_thread::sleep_for(std::chrono::nanoseconds(1ms));
  40325c:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  403263:	00 00 
  403265:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
  40326a:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
  40326f:	48 89 df             	mov    %rbx,%rdi
  403272:	e8 83 00 00 00       	call   4032fa <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlS1_ILl1ELl1000EEvEERKNS0_IT_T0_EE>
  403277:	48 89 df             	mov    %rbx,%rdi
  40327a:	e8 b2 00 00 00       	call   403331 <_ZNSt11this_thread9sleep_forIlSt5ratioILl1ELl1000000000EEEEvRKNSt6chrono8durationIT_T0_EE>
		executionCount++;
  40327f:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
		if (System::Services::InputReleased(executionCount) == false)
  403284:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
  403289:	e8 dc fe ff ff       	call   40316a <_ZN6System8Services13InputReleasedERKi>
  40328e:	84 c0                	test   %al,%al
  403290:	74 1c                	je     4032ae <_ZN6System8Services9SequencerEPv+0x68>
		if (System::Services::ProcessDataReleased(executionCount) == false)
  403292:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
  403297:	e8 ec fe ff ff       	call   403188 <_ZN6System8Services19ProcessDataReleasedERKi>
  40329c:	84 c0                	test   %al,%al
  40329e:	74 0e                	je     4032ae <_ZN6System8Services9SequencerEPv+0x68>
		if (System::Services::OutputReleased(executionCount) == false)
  4032a0:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
  4032a5:	e8 18 ff ff ff       	call   4031c2 <_ZN6System8Services14OutputReleasedERKi>
  4032aa:	84 c0                	test   %al,%al
  4032ac:	75 a5                	jne    403253 <_ZN6System8Services9SequencerEPv+0xd>
	if (EnsureThreadAbort() == true)
  4032ae:	e8 49 ff ff ff       	call   4031fc <_ZN6System8Services17EnsureThreadAbortEv>
  4032b3:	84 c0                	test   %al,%al
  4032b5:	75 0a                	jne    4032c1 <_ZN6System8Services9SequencerEPv+0x7b>
	pthread_exit(nullptr);
  4032b7:	bf 00 00 00 00       	mov    $0x0,%edi
  4032bc:	e8 5f ef ff ff       	call   402220 <pthread_exit@plt>
		syslog(LOG_CRIT, "SYSTEM INFO: Preparing To Shutdown. Last Thread Cycle.");
  4032c1:	be c0 43 40 00       	mov    $0x4043c0,%esi
  4032c6:	bf 02 00 00 00       	mov    $0x2,%edi
  4032cb:	b8 00 00 00 00       	mov    $0x0,%eax
  4032d0:	e8 7b ed ff ff       	call   402050 <syslog@plt>
  4032d5:	eb e0                	jmp    4032b7 <_ZN6System8Services9SequencerEPv+0x71>

00000000004032d7 <_ZNSt6chronossIlSt5ratioILl1ELl1000000000EElS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE>:
      operator<=>(const duration<_Rep1, _Period1>& __lhs,
		  const duration<_Rep2, _Period2>& __rhs)
      {
	using __ct = common_type_t<duration<_Rep1, _Period1>,
				   duration<_Rep2, _Period2>>;
	return __ct(__lhs).count() <=> __ct(__rhs).count();
  4032d7:	48 8b 17             	mov    (%rdi),%rdx
  4032da:	48 8b 06             	mov    (%rsi),%rax
  4032dd:	48 39 c2             	cmp    %rax,%rdx
  4032e0:	74 11                	je     4032f3 <_ZNSt6chronossIlSt5ratioILl1ELl1000000000EElS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE+0x1c>
  4032e2:	48 39 c2             	cmp    %rax,%rdx
  4032e5:	7d 06                	jge    4032ed <_ZNSt6chronossIlSt5ratioILl1ELl1000000000EElS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE+0x16>
  4032e7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4032ec:	c3                   	ret
  4032ed:	b8 01 00 00 00       	mov    $0x1,%eax
  4032f2:	c3                   	ret
  4032f3:	b8 00 00 00 00       	mov    $0x0,%eax
      }
  4032f8:	c3                   	ret
  4032f9:	90                   	nop

00000000004032fa <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlS1_ILl1ELl1000EEvEERKNS0_IT_T0_EE>:
	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
  4032fa:	48 69 06 40 42 0f 00 	imul   $0xf4240,(%rsi),%rax
	  : __r(duration_cast<duration>(__d).count()) { }
  403301:	48 89 07             	mov    %rax,(%rdi)
  403304:	c3                   	ret
  403305:	90                   	nop

0000000000403306 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlS1_ILl1ELl1EEvEERKNS0_IT_T0_EE>:
	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
  403306:	48 69 06 00 ca 9a 3b 	imul   $0x3b9aca00,(%rsi),%rax
	  : __r(duration_cast<duration>(__d).count()) { }
  40330d:	48 89 07             	mov    %rax,(%rdi)
  403310:	c3                   	ret

0000000000403311 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS1_ILl1ELl1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
  403311:	53                   	push   %rbx
  403312:	48 83 ec 10          	sub    $0x10,%rsp
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
  403316:	48 8b 1f             	mov    (%rdi),%rbx
  403319:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  40331e:	e8 e3 ff ff ff       	call   403306 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlS1_ILl1ELl1EEvEERKNS0_IT_T0_EE>
  403323:	48 89 d8             	mov    %rbx,%rax
  403326:	48 2b 44 24 08       	sub    0x8(%rsp),%rax
      }
  40332b:	48 83 c4 10          	add    $0x10,%rsp
  40332f:	5b                   	pop    %rbx
  403330:	c3                   	ret

0000000000403331 <_ZNSt11this_thread9sleep_forIlSt5ratioILl1ELl1000000000EEEEvRKNSt6chrono8durationIT_T0_EE>:
#endif

    /// this_thread::sleep_for
    template<typename _Rep, typename _Period>
      inline void
      sleep_for(const chrono::duration<_Rep, _Period>& __rtime)
  403331:	53                   	push   %rbx
  403332:	48 83 ec 20          	sub    $0x20,%rsp
  403336:	48 89 fb             	mov    %rdi,%rbx
      {
	if (__rtime <= __rtime.zero())
  403339:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
  403340:	00 00 
  403342:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
  403347:	e8 8b ff ff ff       	call   4032d7 <_ZNSt6chronossIlSt5ratioILl1ELl1000000000EElS2_EEDaRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE>
  40334c:	84 c0                	test   %al,%al
  40334e:	7e 71                	jle    4033c1 <_ZNSt11this_thread9sleep_forIlSt5ratioILl1ELl1000000000EEEEvRKNSt6chrono8durationIT_T0_EE+0x90>
	{ return __r; }
  403350:	48 8b 0b             	mov    (%rbx),%rcx
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
  403353:	48 ba b3 94 d6 26 e8 	movabs $0x112e0be826d694b3,%rdx
  40335a:	0b 2e 11 
  40335d:	48 89 c8             	mov    %rcx,%rax
  403360:	48 f7 ea             	imul   %rdx
  403363:	48 c1 fa 1a          	sar    $0x1a,%rdx
  403367:	48 c1 f9 3f          	sar    $0x3f,%rcx
  40336b:	48 29 ca             	sub    %rcx,%rdx
	  return;
	auto __s = chrono::duration_cast<chrono::seconds>(__rtime);
  40336e:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
	auto __ns = chrono::duration_cast<chrono::nanoseconds>(__rtime - __s);
  403373:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  403378:	48 89 df             	mov    %rbx,%rdi
  40337b:	e8 91 ff ff ff       	call   403311 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS1_ILl1ELl1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_>
	{ return __r; }
  403380:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
#ifdef _GLIBCXX_USE_NANOSLEEP
	struct ::timespec __ts =
  403385:	48 89 14 24          	mov    %rdx,(%rsp)
  403389:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
	  {
	    static_cast<std::time_t>(__s.count()),
	    static_cast<long>(__ns.count())
	  };
	while (::nanosleep(&__ts, &__ts) == -1 && errno == EINTR)
  40338e:	eb 13                	jmp    4033a3 <_ZNSt11this_thread9sleep_forIlSt5ratioILl1ELl1000000000EEEEvRKNSt6chrono8durationIT_T0_EE+0x72>
  403390:	e8 9b ec ff ff       	call   402030 <__errno_location@plt>
  403395:	83 38 04             	cmpl   $0x4,(%rax)
  403398:	74 20                	je     4033ba <_ZNSt11this_thread9sleep_forIlSt5ratioILl1ELl1000000000EEEEvRKNSt6chrono8durationIT_T0_EE+0x89>
  40339a:	b8 00 00 00 00       	mov    $0x0,%eax
  40339f:	84 c0                	test   %al,%al
  4033a1:	74 1e                	je     4033c1 <_ZNSt11this_thread9sleep_forIlSt5ratioILl1ELl1000000000EEEEvRKNSt6chrono8durationIT_T0_EE+0x90>
  4033a3:	48 89 e7             	mov    %rsp,%rdi
  4033a6:	48 89 e6             	mov    %rsp,%rsi
  4033a9:	e8 b2 ec ff ff       	call   402060 <nanosleep@plt>
  4033ae:	83 f8 ff             	cmp    $0xffffffff,%eax
  4033b1:	74 dd                	je     403390 <_ZNSt11this_thread9sleep_forIlSt5ratioILl1ELl1000000000EEEEvRKNSt6chrono8durationIT_T0_EE+0x5f>
  4033b3:	b8 00 00 00 00       	mov    $0x0,%eax
  4033b8:	eb e5                	jmp    40339f <_ZNSt11this_thread9sleep_forIlSt5ratioILl1ELl1000000000EEEEvRKNSt6chrono8durationIT_T0_EE+0x6e>
  4033ba:	b8 01 00 00 00       	mov    $0x1,%eax
  4033bf:	eb de                	jmp    40339f <_ZNSt11this_thread9sleep_forIlSt5ratioILl1ELl1000000000EEEEvRKNSt6chrono8durationIT_T0_EE+0x6e>
	  { }
#else
	__sleep_for(__s, __ns);
#endif
      }
  4033c1:	48 83 c4 20          	add    $0x20,%rsp
  4033c5:	5b                   	pop    %rbx
  4033c6:	c3                   	ret

Disassembly of section .fini:

00000000004033c8 <_fini>:
  4033c8:	f3 0f 1e fa          	endbr64
  4033cc:	48 83 ec 08          	sub    $0x8,%rsp
  4033d0:	48 83 c4 08          	add    $0x8,%rsp
  4033d4:	c3                   	ret
